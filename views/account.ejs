<!doctype html>
<html lang="en">
<head>
  <%- include('./partials/head', { pageTitle: 'Your Account â€¢ BookLantern' }) %>
</head>
<body>
  <%- include('./partials/navbar') %>

  <main class="stack" style="--gap:20px; max-width:880px; margin:40px auto; padding:0 16px;">
    <h1>Your Account</h1>

    <!-- If you later add server sessions, this block will render; otherwise client takes over -->
    <% if (user) { %>
      <div class="card stack" style="--gap:12px; padding:16px;">
        <div><strong>Name:</strong> <%= user.name || user.user_metadata?.name || '' %></div>
        <div><strong>Email:</strong> <%= user.email %></div>
        <div><strong>Role:</strong> <%= user.role || user.app_metadata?.role || 'reader' %></div>
      </div>
    <% } %>

    <!-- Client-side via Supabase -->
    <div id="accountClient" class="card stack" style="--gap:12px; padding:16px; display:none;">
      <div><strong>Name:</strong> <span id="acc-name">â€”</span></div>
      <div><strong>Email:</strong> <span id="acc-email">â€”</span></div>
      <div><strong>Role:</strong> <span id="acc-role">reader</span></div>

      <p id="acc-note" class="ink-2" style="margin:4px 0 0 0; display:none;">
        You signed in with a provider. If you want, you can also set a password:
      </p>

      <div class="row" style="gap:8px; flex-wrap:wrap; margin-top:8px;">
        <a class="btn" href="/read">Go to Library</a>
        <button id="acc-reset" class="btn" type="button">Create or Reset Password</button>
        <button id="acc-signout" class="btn" type="button">Sign out</button>
      </div>

      <div id="acc-msg" class="ink-2" style="margin-top:6px;"></div>
    </div>

    <div id="accountEmpty" class="card" style="padding:16px; display:none;">
      Youâ€™re not signed in. <a href="/login">Log in</a> to view your account.
    </div>
  </main>

  <%- include('./partials/footer') %>

  <script>
  (async function () {
    const sb = window.supabaseClient;
    const base = location.origin || '<%= process.env.SITE_URL || "" %>';
    const msg = document.getElementById('acc-msg');

    try {
      const { data, error } = await sb.auth.getUser();
      if (error) throw error;

      const user = data && data.user;
      if (user) {
        const card = document.getElementById('accountClient');
        card.style.display = 'block';

        const name =
          (user.user_metadata && (user.user_metadata.name || user.user_metadata.full_name)) || '';
        document.getElementById('acc-name').textContent = name || 'â€”';
        document.getElementById('acc-email').textContent = user.email || 'â€”';
        document.getElementById('acc-role').textContent =
          (user.app_metadata && user.app_metadata.role) || 'reader';

        // Show a small note if this session came from OAuth (no password yet)
        const hasPassword = !!user.password_updated_at; // present for email/pass accounts after first set
        if (!hasPassword) {
          document.getElementById('acc-note').style.display = 'block';
        }

        // Always allow the user to (create or) reset a password
        document.getElementById('acc-reset').addEventListener('click', async () => {
          msg.textContent = '';
          try {
            const { error } = await sb.auth.resetPasswordForEmail(user.email, {
              redirectTo: base + '/auth/callback?type=recovery',
            });
            if (error) throw error;
            msg.textContent = 'ðŸ“¬ Check your inbox for a password reset link.';
          } catch (e) {
            msg.textContent = e.message || 'Could not send reset email.';
          }
        });

        document.getElementById('acc-signout').addEventListener('click', async () => {
          try { await sb.auth.signOut(); } catch (e) {}
          location.href = '/';
        });
      } else {
        document.getElementById('accountEmpty').style.display = 'block';
      }
    } catch (e) {
      console.warn('Account load failed:', e);
      document.getElementById('accountEmpty').style.display = 'block';
    }
  })();
  </script>
</body>
</html>
