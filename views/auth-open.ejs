<!doctype html>
<html lang="en">
<head>
  <%- include('./partials/head', {
    pageTitle,
    pageDescription,
    canonicalUrl
  }) %>
  <style>
    .card { border-radius: 12px; box-shadow: 0 10px 30px rgba(0,0,0,.06); padding: 14px; max-width: 540px; }
    .btn  { padding: 10px 14px; border-radius: 8px; border: 0; cursor: pointer; background:#6366f1; color:#fff; }
    .ink-2 { color: #6b7280; }
  </style>
</head>
<body>
  <%- include('./partials/navbar') %>

  <main class="container" style="max-width:760px; margin:28px auto; padding:0 16px;">
    <h1>Almost there…</h1>
    <p id="state" class="ink-2">Click the button below to continue resetting your password.</p>

    <div class="card" style="margin-top:10px;">
      <button id="go" class="btn" type="button">Continue</button>
    </div>

    <p style="margin-top:12px;"><a href="/login">Back to login</a></p>
  </main>

  <%- include('./partials/footer') %>

  <script>
  (function(){
    const sb = window.supabaseClient;
    const state = document.getElementById('state');
    const btn   = document.getElementById('go');

    const params = new URLSearchParams(location.search);
    const type = (params.get('type') || '').toLowerCase();
    const th   = params.get('th') || '';

    function showErr(msg){
      state.textContent = msg || 'Your reset link is invalid or expired. Please request a new one.';
      btn.style.display = 'none';
    }

    if (!sb) { showErr('Auth not available. Try reloading, or request a new link.'); return; }
    if (!type || !th) { showErr(); return; }

    async function proceed(){
      btn.disabled = true;
      btn.textContent = 'Continuing…';
      try {
        // Verify the token_hash and create a session
        const { data, error } = await sb.auth.verifyOtp({
          type: type,              // 'recovery'
          token_hash: th
        });
        if (error) {
          showErr(error.message || 'Could not verify link.');
          return;
        }
        // On success, head to the password form page
        location.href = '/auth/callback?type=' + encodeURIComponent(type);
      } catch (e) {
        showErr('Something went wrong. Please request a new link.');
      }
    }

    // Click handler + auto-run (helps with email clients that don’t auto-run JS)
    btn.addEventListener('click', proceed);
    // Auto-continue after a short delay
    setTimeout(() => { if (!btn.disabled) proceed(); }, 300);
  })();
  </script>
</body>
</html>
