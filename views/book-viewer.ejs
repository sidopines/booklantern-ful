<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('./partials/head.ejs', {
    pageTitle: (book && book.title ? `${book.title} | Read` : 'Read Book'),
    pageDescription: 'Read this title in BookLantern‚Äôs clean reader.'
  }) %>
  <style>
    :root { --barH:56px; --statusH:44px; --bg:#0b0d10; --ink:#e6edf3; --muted:#98a2b3; --card:#11161d; --line:#1f2937; --brand:#6c8cff; --danger:#ef4444; }
    *{box-sizing:border-box}
    body{margin:0;background:var(--bg);color:var(--ink);font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial}
    .bar{display:flex;align-items:center;gap:12px;height:var(--barH);padding:10px 16px;border-bottom:1px solid var(--line);background:#0e1116}
    .back{color:#cbd5e1;text-decoration:none}
    .title{font-weight:700;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}
    .grow{flex:1}
    .chip{display:inline-flex;align-items:center;gap:6px;padding:6px 10px;border-radius:10px;border:1px solid #263041;background:var(--card);color:var(--ink);font-size:13px;cursor:pointer}
    .chip.danger{border-color:#3b1e21;background:#1a0f10;color:#fecaca}
    .chip:disabled{opacity:.6;cursor:not-allowed}
    .status{height:var(--statusH);display:flex;align-items:center;gap:10px;padding:8px 16px;border-bottom:1px solid var(--line);background:#0f1319;color:var(--muted);font-size:14px;flex-wrap:wrap}
    .status input[type="number"]{width:84px;padding:6px 8px;border:1px solid #263041;border-radius:8px;background:#0c1117;color:var(--ink)}
    .btn{padding:8px 12px;border-radius:10px;border:1px solid #263041;background:#172034;color:#e6edf3;cursor:pointer}
    .btn.primary{background:var(--brand);border-color:#425dd6;color:#fff}
    .btn:disabled{opacity:.6;cursor:not-allowed}
    iframe{display:block;width:100%;height:calc(100vh - var(--barH) - var(--statusH));border:0;background:#fff}
    /* Guest overlay */
    .guest-wrap{min-height:100vh;display:flex;flex-direction:column}
    .guest-card{max-width:520px;margin:8vh auto;padding:20px;border:1px solid #263041;border-radius:14px;background:#0f1319;color:var(--ink);box-shadow:0 20px 60px rgba(0,0,0,.35)}
    .guest-card h1{margin:0 0 8px 0;font-size:22px}
    .guest-card p{margin:0 0 14px 0;color:var(--muted)}
    .guest-actions{display:flex;gap:10px;flex-wrap:wrap;margin-top:8px}
    .hint{color:var(--muted);font-size:12px}
  </style>
</head>
<body>

<% if (!user) { %>
  <!-- Friendly guest screen (extra guard; routes also enforce login) -->
  <div class="guest-wrap">
    <div class="bar">
      <a href="javascript:history.back()" class="back">‚Üê Back</a>
      <div class="title"><%= book?.title || book?.archiveId || 'Book' %></div>
      <div class="grow"></div>
    </div>

    <main class="guest-card">
      <h1>Sign in to start reading</h1>
      <p>This title opens in our reader. Create a free account or sign in to continue.</p>
      <div class="guest-actions">
        <a class="btn primary" href="/register?next=/read/book/<%= encodeURIComponent(book?.archiveId || '') %>">Create account</a>
        <a class="btn" href="/login?next=/read/book/<%= encodeURIComponent(book?.archiveId || '') %>">Login</a>
      </div>
      <p class="hint">Already a member? Use Login. New here? Create an account ‚Äî it‚Äôs quick.</p>
    </main>
  </div>
<% } else { %>

  <!-- Reader chrome -->
  <div class="bar">
    <a href="javascript:history.back()" class="back">‚Üê Back</a>
    <div class="title"><%= book?.title || book?.archiveId || 'Book' %></div>
    <div class="grow"></div>
    <button id="favBtn" class="chip" title="Favorite">
      <span id="favIcon"><%= isFavorite ? '‚ù§Ô∏è' : 'ü§ç' %></span> <span id="favText"><%= isFavorite ? 'Favorited' : 'Favorite' %></span>
    </button>
  </div>

  <div class="status">
    <span id="bmStatus">Bookmark: <em id="bmLabel">loading‚Ä¶</em></span>
    <button id="resumeBtn" class="btn" disabled>Resume</button>
    <span>|</span>
    <label for="pageInput">Go to page</label>
    <input id="pageInput" type="number" min="1" step="1" placeholder="1">
    <button id="goBtn" class="btn">Go</button>
    <button id="saveBtn" class="btn primary">Save page</button>
  </div>

  <iframe id="iaFrame"
          src="https://archive.org/stream/<%= encodeURIComponent(book.archiveId) %>?ui=embed#page=1"
          referrerpolicy="no-referrer"
          allowfullscreen>
  </iframe>

  <script>
    (function(){
      const id = <%- JSON.stringify(book.archiveId || '') %>;
      const frame = document.getElementById('iaFrame');
      const favBtn = document.getElementById('favBtn');
      const favIcon = document.getElementById('favIcon');
      const favText = document.getElementById('favText');
      const bmLabel = document.getElementById('bmLabel');
      const resumeBtn = document.getElementById('resumeBtn');
      const pageInput = document.getElementById('pageInput');
      const goBtn = document.getElementById('goBtn');
      const saveBtn = document.getElementById('saveBtn');

      function setFramePage(p){
        if (!p || p < 1) p = 1;
        const base = `https://archive.org/stream/${encodeURIComponent(id)}?ui=embed#page=${p}`;
        frame.src = base;
      }

      async function loadBookmark(){
        try {
          const r = await fetch(`/read/book/${encodeURIComponent(id)}/bookmark`, { credentials: 'same-origin' });
          if (!r.ok) throw new Error('bad');
          const data = await r.json();
          const p = Number(data.page || 1);
          bmLabel.textContent = p ? `page ${p}` : 'none';
          resumeBtn.disabled = !p;
          resumeBtn.onclick = () => setFramePage(p || 1);
        } catch {
          bmLabel.textContent = 'none';
          resumeBtn.disabled = true;
        }
      }

      async function saveBookmark(p){
        try {
          const body = new URLSearchParams();
          body.set('page', String(p || 1));
          const r = await fetch(`/read/book/${encodeURIComponent(id)}/bookmark`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            credentials: 'same-origin',
            body
          });
          if (r.ok) {
            bmLabel.textContent = `page ${p}`;
            resumeBtn.disabled = false;
            toast('Bookmark saved');
          } else {
            toast('Could not save bookmark', true);
          }
        } catch { toast('Could not save bookmark', true); }
      }

      async function toggleFavorite(){
        try {
          const r = await fetch(`/read/book/${encodeURIComponent(id)}/favorite`, {
            method: 'POST',
            credentials: 'same-origin'
          });
          const text = await r.text();
          if (/Added/.test(text)) {
            favIcon.textContent = '‚ù§Ô∏è';
            favText.textContent = 'Favorited';
            toast('Added to favorites');
          } else if (/Removed/.test(text)) {
            favIcon.textContent = 'ü§ç';
            favText.textContent = 'Favorite';
            toast('Removed from favorites');
          } else {
            toast(text || 'Favorite updated');
          }
        } catch {
          toast('Failed to update favorite', true);
        }
      }

      // Tiny toast
      let toastEl;
      function toast(msg, danger){
        if (!toastEl){
          toastEl = document.createElement('div');
          toastEl.style.position = 'fixed';
          toastEl.style.bottom = '16px';
          toastEl.style.left = '50%';
          toastEl.style.transform = 'translateX(-50%)';
          toastEl.style.background = danger ? '#7f1d1d' : '#0b2b52';
          toastEl.style.color = '#fff';
          toastEl.style.padding = '10px 14px';
          toastEl.style.borderRadius = '10px';
          toastEl.style.boxShadow = '0 10px 30px rgba(0,0,0,.35)';
          toastEl.style.zIndex = '200';
          document.body.appendChild(toastEl);
        }
        toastEl.style.background = danger ? '#7f1d1d' : '#0b2b52';
        toastEl.textContent = msg;
        toastEl.style.opacity = '1';
        setTimeout(()=>{ toastEl.style.opacity = '0'; }, 1600);
      }

      // Wire up
      favBtn.addEventListener('click', toggleFavorite);
      goBtn.addEventListener('click', () => {
        const p = Math.max(1, Number(pageInput.value || 1));
        setFramePage(p);
      });
      saveBtn.addEventListener('click', () => {
        const p = Math.max(1, Number(pageInput.value || 1));
        saveBookmark(p);
      });

      loadBookmark(); // initial
    })();
  </script>
<% } %>
</body>
</html>
