<% pageTitle = `${book.title} | Read Book`; pageDescription = `Read ${book.title} online via BookLantern. Bookmark and save to favorites.`; %>
<!DOCTYPE html>
<html lang="en">
<head>
  <% include ./partials/head.ejs %>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f4f4f4;
      margin: 0;
      padding: 2rem;
    }
    h1 {
      margin-bottom: 1rem;
    }
    iframe {
      width: 100%;
      height: 80vh;
      border: 1px solid #ccc;
      border-radius: 8px;
    }
    .action-buttons {
      margin-top: 1rem;
    }
    .action-buttons form {
      display: inline-block;
      margin-right: 1rem;
    }
    .action-buttons button {
      padding: 0.5rem 1rem;
      font-size: 0.9rem;
      background: #0077cc;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .action-buttons button.remove {
      background: #cc0000;
    }
    #bookmark-status {
      margin-top: 1rem;
      font-size: 0.9rem;
      color: green;
    }
  </style>
</head>
<body>
  <h1><%= book.title %></h1>

  <!-- Embedded Archive.org Book -->
  <iframe
    id="book-frame"
    src="https://archive.org/stream/<%= book.archiveId %>?ui=embed#page=1"
    allowfullscreen
  ></iframe>

  <!-- Bookmark & Favorites UI -->
  <div class="action-buttons">
    <form method="POST" action="/favorite/<%= book._id %><%= isFavorite ? '/remove' : '' %>">
      <button type="submit" class="<%= isFavorite ? 'remove' : '' %>">
        <%= isFavorite ? '‚ùå Remove from Favorites' : '‚ù§Ô∏è Add to Favorites' %>
      </button>
    </form>
  </div>

  <div id="bookmark-status">‚è≥ Loading last saved page...</div>

  <script>
    const userLoggedIn = <%= typeof user !== 'undefined' ? 'true' : 'false' %>;
    const bookId = "<%= book._id %>";
    const iframe = document.getElementById('book-frame');
    const bookmarkStatus = document.getElementById('bookmark-status');

    // Load last saved page
    fetch(`/read/book/${bookId}/bookmark`)
      .then(res => res.json())
      .then(data => {
        const page = data.page || 1;
        iframe.src = `https://archive.org/stream/<%= book.archiveId %>?ui=embed#page=${page}`;
        bookmarkStatus.textContent = `üìñ Resuming from page ${page}`;
      })
      .catch(() => {
        bookmarkStatus.textContent = "‚ö†Ô∏è Failed to load last bookmark.";
      });

    // Save bookmark on unload
    window.addEventListener('beforeunload', () => {
      if (!userLoggedIn) return;
      const currentPage = getCurrentPageFromHash(iframe.src);
      if (currentPage) {
        fetch(`/read/book/${bookId}/bookmark`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ page: currentPage })
        });
      }
    });

    function getCurrentPageFromHash(url) {
      const match = url.match(/#page=(\d+)/);
      return match ? parseInt(match[1], 10) : 1;
    }
  </script>
</body>
</html>
