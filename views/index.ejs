<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('./partials/head.ejs', {
    pageTitle: pageTitle || 'BookLantern — Read & Learn',
    pageDescription: pageDescription || 'Millions of free and public-domain books—one clean reader.',
    loadGSAP: true,
    loadThreeJS: true,
    loadLottie: true,
    loadLenis: true
  }) %>
</head>
<body class="home">
  <%- include('./partials/nav.ejs') %>

  <!-- CINEMATIC HERO SECTION -->
  <section class="hero cinematic-bg vignette">
    <!-- Act 1: Cold Open - Library Doors -->
    <div class="hero-act-1">
      <div class="doors-container">
        <div id="library-doors" class="doors-animation"></div>
        <div class="doors-overlay">
          <div class="light-bloom"></div>
        </div>
      </div>
    </div>

    <!-- Act 2: Living Library Scene -->
    <div class="hero-act-2">
      <div class="library-scene">
        <!-- Parallax Starfield -->
        <div class="starfield"></div>
        
        <!-- Floating Dust Motes -->
        <div class="dust-motes" id="dust-motes"></div>
        
        <!-- 3D Book Scene -->
        <div class="hero-scene">
          <div id="hero-scene" class="scene-container"></div>
        </div>
        
        <!-- Reading Hero Character -->
        <div class="hero-character">
          <div id="reading-hero" class="character-container"></div>
        </div>
        
        <!-- Side Cat Animation -->
        <div class="side-cat">
          <div id="side-cat" class="cat-container"></div>
        </div>
      </div>
    </div>

    <!-- Act 3: Call to Action -->
    <div class="hero-act-3">
      <div class="hero-content">
        <div class="container">
          <div class="hero-inner">
            <h1 class="hero-title reveal">Books, beautifully.</h1>
            <p class="hero-subtitle reveal">
              Search the open stacks — from globally trusted libraries across the web.
              Read in a focused, book-like experience that stays out of the way.
            </p>

            <!-- Large Neon Search Pill -->
            <form class="hero-search reveal" action="/read" method="GET">
              <div class="search-pill-large">
                <input type="text" name="query" placeholder="Search title or author..." class="search-input-large" />
                <button class="btn btn-primary btn-large" type="submit">
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <circle cx="11" cy="11" r="8"></circle>
                    <path d="m21 21-4.35-4.35"></path>
                  </svg>
                  Search Books
                </button>
              </div>
            </form>

            <div class="hero-cta reveal">
              <a class="btn btn-accent btn-large" href="/read">Explore Free Books</a>
              <a class="btn btn-ghost btn-large" href="#how-it-works">How BookLantern Works</a>
              <% if (!user) { %>
                <a class="btn btn-glass btn-large" href="/register">Create Account</a>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- ANIMATED GENRES ROW -->
  <section class="section reveal-section">
    <div class="container">
      <div class="section-header">
        <h2 class="reveal">Popular Genres</h2>
        <p class="section-subtitle reveal">Explore our most loved categories</p>
      </div>
      <div class="genres-grid">
        <a href="/read?query=History" class="genre-card reveal-card card-parallax hover-lift" data-animation="history">
          <div class="genre-icon" id="history-icon"></div>
          <h3>History</h3>
          <p>Ancient civilizations to modern times</p>
        </a>
        <a href="/read?query=Philosophy" class="genre-card reveal-card card-parallax hover-lift" data-animation="philosophy">
          <div class="genre-icon" id="philosophy-icon"></div>
          <h3>Philosophy</h3>
          <p>Great thinkers and timeless wisdom</p>
        </a>
        <a href="/read?query=Science" class="genre-card reveal-card card-parallax hover-lift" data-animation="science">
          <div class="genre-icon" id="science-icon"></div>
          <h3>Science</h3>
          <p>Discoveries that shaped our world</p>
        </a>
        <a href="/read?query=Religion" class="genre-card reveal-card card-parallax hover-lift" data-animation="religion">
          <div class="genre-icon" id="religion-icon"></div>
          <h3>Religion</h3>
          <p>Sacred texts and spiritual wisdom</p>
        </a>
        <a href="/read?query=Literature" class="genre-card reveal-card card-parallax hover-lift" data-animation="literature">
          <div class="genre-icon" id="literature-icon"></div>
          <h3>Literature</h3>
          <p>Classic novels and poetry</p>
        </a>
      </div>
    </div>
  </section>

  <!-- TRENDING BOOKS -->
  <section class="section reveal-section">
    <div class="container">
      <div class="section-header">
        <h2 class="reveal">Trending Now</h2>
        <p class="section-subtitle reveal">Latest from BookLantern</p>
      </div>
      <div id="featured-grid" class="books-grid" aria-live="polite"></div>
    </div>
  </section>

  <!-- WHY BOOKLANTERN -->
  <section class="section reveal-section" id="how-it-works">
    <div class="container">
      <div class="section-header">
        <h2 class="reveal">Why BookLantern?</h2>
        <p class="section-subtitle reveal">Built for readers, by readers</p>
      </div>
      <div class="features-grid">
        <div class="feature-card glass-card reveal-card volumetric-glow" data-animation="security">
          <div class="feature-icon" id="security-icon"></div>
          <h3>No Login Hoops</h3>
          <p>Start reading immediately. No account required to explore our vast collection of free books.</p>
        </div>
        <div class="feature-card glass-card reveal-card volumetric-glow" data-animation="reader">
          <div class="feature-icon" id="reader-icon"></div>
          <h3>Single Reader</h3>
          <p>One beautiful, consistent reading experience across all books. No more juggling different interfaces.</p>
        </div>
        <div class="feature-card glass-card reveal-card volumetric-glow" data-animation="trust">
          <div class="feature-icon" id="trust-icon"></div>
          <h3>Safe & Free</h3>
          <p>All content is public domain or freely licensed. No ads, no tracking, just pure reading.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- LIVE PREVIEW -->
  <section class="section reveal-section">
    <div class="container">
      <div class="section-header">
        <h2 class="reveal">See It In Action</h2>
        <p class="section-subtitle reveal">Experience our beautiful reader</p>
      </div>
      <div class="preview-container glass-card reveal-card">
        <div class="preview-header">
          <div class="preview-dots">
            <span></span>
            <span></span>
            <span></span>
          </div>
          <div class="preview-title">BookLantern Reader</div>
        </div>
        <div class="preview-content">
          <div class="preview-pages">
            <div class="preview-page skeleton"></div>
            <div class="preview-page skeleton"></div>
            <div class="preview-page skeleton"></div>
          </div>
          <!-- Page Turning Animation -->
          <div class="page-turn-animation" id="page-turn-demo"></div>
        </div>
      </div>
    </div>
  </section>

  <!-- CURATED SHELVES -->
  <section class="section reveal-section">
    <div class="container" id="shelves"></div>
  </section>

  <%- include('./partials/footer.ejs') %>

  <!-- HOMEPAGE STYLES -->
  <style>
    /* Cinematic Hero Section */
    .hero {
      position: relative;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }

    /* Act 1: Cold Open - Library Doors */
    .hero-act-1 {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
    }

    .doors-container {
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
    }

    .doors-animation {
      width: 400px;
      height: 300px;
    }

    .doors-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
    }

    .light-bloom {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(108, 124, 255, 0.3) 0%, transparent 70%);
      transform: translate(-50%, -50%);
      animation: light-bloom 2s ease-out 1s forwards;
      opacity: 0;
    }

    @keyframes light-bloom {
      0% { opacity: 0; transform: translate(-50%, -50%) scale(0.5); }
      100% { opacity: 1; transform: translate(-50%, -50%) scale(1.5); }
    }

    /* Act 2: Living Library Scene */
    .hero-act-2 {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 2;
      opacity: 0;
      animation: fade-in-scene 1s ease-out 3s forwards;
    }

    @keyframes fade-in-scene {
      0% { opacity: 0; }
      100% { opacity: 1; }
    }

    .library-scene {
      position: relative;
      width: 100%;
      height: 100%;
    }

    .hero-scene {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 2;
      pointer-events: none;
    }

    .scene-container {
      width: 300px;
      height: 400px;
    }

    .hero-character {
      position: absolute;
      top: 60%;
      left: 30%;
      z-index: 3;
      pointer-events: none;
    }

    .character-container {
      width: 200px;
      height: 150px;
    }

    .side-cat {
      position: absolute;
      top: 70%;
      right: 20%;
      z-index: 3;
      pointer-events: none;
    }

    .cat-container {
      width: 100px;
      height: 80px;
    }

    /* Act 3: Call to Action */
    .hero-act-3 {
      position: relative;
      z-index: 4;
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      animation: fade-in-cta 1s ease-out 4s forwards;
    }

    @keyframes fade-in-cta {
      0% { opacity: 0; transform: translateY(50px); }
      100% { opacity: 1; transform: translateY(0); }
    }

    .hero-content {
      position: relative;
      z-index: 3;
      text-align: center;
      max-width: 800px;
      margin: 0 auto;
      padding: var(--space-2xl);
    }

    /* Large Neon Search Pill */
    .search-pill-large {
      display: flex;
      gap: var(--space-md);
      align-items: center;
      background: var(--glass-bg);
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
      border: 2px solid var(--glass-border);
      border-radius: var(--radius-pill);
      padding: var(--space-md);
      box-shadow: var(--glass-shadow);
      max-width: 600px;
      margin: 0 auto var(--space-xl);
      transition: all var(--transition-normal);
    }

    .search-pill-large:focus-within {
      border-color: var(--primary);
      box-shadow: var(--shadow-neon);
      transform: scale(1.02);
    }

    .search-input-large {
      flex: 1;
      border: none;
      background: transparent;
      color: var(--text);
      font-size: 1.1rem;
      padding: var(--space-md) var(--space-lg);
      outline: none;
    }

    .search-input-large::placeholder {
      color: var(--muted);
    }

    .btn-large {
      padding: var(--space-md) var(--space-xl);
      font-size: 1.1rem;
      font-weight: var(--font-weight-semibold);
    }

    /* Page Turn Animation */
    .page-turn-animation {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 60px;
      height: 60px;
      pointer-events: none;
      z-index: 10;
    }

    /* Genre Icons with Animation IDs */
    .genre-icon {
      width: 48px;
      height: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
      margin-bottom: var(--space-md);
      transition: transform var(--transition-normal);
    }

    .genre-card:hover .genre-icon {
      transform: scale(1.2) rotate(5deg);
    }

    /* Feature Icons with Animation IDs */
    .feature-icon {
      width: 48px;
      height: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
      margin-bottom: var(--space-md);
      transition: transform var(--transition-normal);
    }

    .feature-card:hover .feature-icon {
      transform: scale(1.2) rotate(-5deg);
    }

    .hero-title {
      font-size: clamp(2.5rem, 5vw, 4rem);
      font-weight: var(--font-weight-extrabold);
      margin-bottom: var(--space-lg);
      background: var(--gradient-primary);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .hero-subtitle {
      font-size: 1.25rem;
      color: var(--muted);
      margin-bottom: var(--space-2xl);
      line-height: 1.6;
    }

    .hero-search {
      margin-bottom: var(--space-2xl);
    }

    .search-wrapper {
      display: flex;
      gap: var(--space-md);
      max-width: 600px;
      margin: 0 auto;
      background: var(--glass-bg);
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
      border: 1px solid var(--glass-border);
      border-radius: var(--radius-pill);
      padding: var(--space-sm);
      box-shadow: var(--glass-shadow);
    }

    .search-input {
      flex: 1;
      border: none;
      background: transparent;
      color: var(--text);
      font-size: 1.1rem;
      padding: var(--space-md) var(--space-lg);
      outline: none;
    }

    .search-input::placeholder {
      color: var(--muted);
    }

    .hero-cta {
      display: flex;
      gap: var(--space-md);
      justify-content: center;
      flex-wrap: wrap;
    }

    .hero-character {
      position: absolute;
      bottom: var(--space-xl);
      right: var(--space-xl);
      z-index: 2;
      pointer-events: none;
    }

    .character-container {
      width: 200px;
      height: 150px;
    }

    /* Section Styles */
    .section {
      padding: var(--space-3xl) 0;
    }

    .section-header {
      text-align: center;
      margin-bottom: var(--space-3xl);
    }

    .section-header h2 {
      font-size: clamp(2rem, 4vw, 3rem);
      font-weight: var(--font-weight-bold);
      margin-bottom: var(--space-md);
      background: var(--gradient-primary);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .section-subtitle {
      font-size: 1.1rem;
      color: var(--muted);
      max-width: 600px;
      margin: 0 auto;
    }

    /* Genres Grid */
    .genres-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: var(--space-xl);
      margin-bottom: var(--space-2xl);
    }

    .genre-card {
      background: var(--glass-bg);
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
      border: 1px solid var(--glass-border);
      border-radius: var(--radius-xl);
      padding: var(--space-2xl);
      text-align: center;
      text-decoration: none;
      color: var(--text);
      transition: all var(--transition-normal);
      position: relative;
      overflow: hidden;
    }

    .genre-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left var(--transition-slow);
    }

    .genre-card:hover::before {
      left: 100%;
    }

    .genre-card:hover {
      transform: translateY(-8px);
      box-shadow: var(--shadow-neon);
      border-color: var(--primary);
    }

    .genre-icon {
      font-size: 3rem;
      margin-bottom: var(--space-lg);
    }

    .genre-card h3 {
      font-size: 1.5rem;
      font-weight: var(--font-weight-semibold);
      margin-bottom: var(--space-md);
    }

    .genre-card p {
      color: var(--muted);
      line-height: 1.5;
    }

    /* Books Grid */
    .books-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: var(--space-xl);
    }

    /* Features Grid */
    .features-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: var(--space-xl);
    }

    .feature-card {
      text-align: center;
      padding: var(--space-2xl);
    }

    .feature-icon {
      font-size: 3rem;
      margin-bottom: var(--space-lg);
    }

    .feature-card h3 {
      font-size: 1.5rem;
      font-weight: var(--font-weight-semibold);
      margin-bottom: var(--space-md);
    }

    .feature-card p {
      color: var(--muted);
      line-height: 1.6;
    }

    /* Preview Container */
    .preview-container {
      max-width: 800px;
      margin: 0 auto;
      padding: 0;
      overflow: hidden;
    }

    .preview-header {
      display: flex;
      align-items: center;
      gap: var(--space-md);
      padding: var(--space-lg);
      background: rgba(0, 0, 0, 0.1);
      border-bottom: 1px solid var(--glass-border);
    }

    .preview-dots {
      display: flex;
      gap: var(--space-sm);
    }

    .preview-dots span {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      background: var(--muted);
    }

    .preview-dots span:first-child {
      background: #ff5f57;
    }

    .preview-dots span:nth-child(2) {
      background: #ffbd2e;
    }

    .preview-dots span:last-child {
      background: #28ca42;
    }

    .preview-title {
      font-weight: var(--font-weight-medium);
      color: var(--text);
    }

    .preview-content {
      padding: var(--space-2xl);
    }

    .preview-pages {
      display: flex;
      gap: var(--space-md);
      justify-content: center;
    }

    .preview-page {
      width: 200px;
      height: 300px;
      border-radius: var(--radius-lg);
    }

    /* Mobile Responsive */
    @media (max-width: 768px) {
      .hero-content {
        padding: var(--space-lg);
      }

      .search-wrapper {
        flex-direction: column;
        gap: var(--space-sm);
      }

      .hero-cta {
        flex-direction: column;
        align-items: center;
      }

      .genres-grid {
        grid-template-columns: 1fr;
      }

      .features-grid {
        grid-template-columns: 1fr;
      }

      .preview-pages {
        flex-direction: column;
        align-items: center;
      }

      .hero-character {
        display: none;
      }
    }

    /* Reduced Motion */
    @media (prefers-reduced-motion: reduce) {
      .genre-card:hover,
      .feature-card:hover {
        transform: none;
      }
    }
  </style>

  <!-- HOMEPAGE SCRIPTS -->
  <script defer src="/js/hero-scene.js"></script>
  <script defer src="/js/scene-core.js"></script>
  <script>
    // Initialize cinematic homepage animations
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize scene manager
      if (window.SceneManager) {
        const sceneManager = window.SceneManager;
        
        // Act 1: Library doors animation
        sceneManager.tryLottie('library-doors', '/animations/library-doors.json', {
          loop: false,
          autoplay: true
        });

        // Act 2: Reading hero character
        sceneManager.tryLottie('reading-hero', '/animations/reading-hero.json', {
          loop: true,
          autoplay: true
        });

        // Side cat animation
        sceneManager.tryLottie('side-cat', '/animations/side-cat.json', {
          loop: true,
          autoplay: true
        });

        // Page turn demo
        sceneManager.tryLottie('page-turn-demo', '/animations/page-flip.json', {
          loop: true,
          autoplay: true
        });

        // Add parallax layers
        sceneManager.addParallaxLayer('.starfield', { speed: 0.3 });
        sceneManager.addParallaxLayer('.dust-motes', { speed: 0.5 });
        
        // Create particle system for dust motes
        sceneManager.createParticleSystem('dust-motes', {
          count: 15,
          color: 'rgba(255, 255, 255, 0.2)'
        });

        // Create spotlight effects
        sceneManager.createSpotlight('hero-act-2', {
          width: '400px',
          height: '400px',
          x: '50%',
          y: '50%'
        });
      }

      // Initialize smooth scroll with Lenis
      if (window.Lenis) {
        const lenis = new Lenis({
          duration: 1.2,
          easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
          direction: 'vertical',
          gestureDirection: 'vertical',
          smooth: true,
          mouseMultiplier: 1,
          smoothTouch: false,
          touchMultiplier: 2,
          infinite: false,
        });

        function raf(time) {
          lenis.raf(time);
          requestAnimationFrame(raf);
        }
        requestAnimationFrame(raf);
      }
    });
  </script>

  <!-- HOMEPAGE POPULATION SCRIPT -->
  <script>
    (function(){
      const IS_LOGGED_IN = <%= !!user %>;

      const featuredGrid = document.getElementById('featured-grid');
      const shelvesRoot  = document.getElementById('shelves');

      function escapeHtml(s){
        return String(s || '')
          .replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;')
          .replace(/"/g,'&quot;').replace(/'/g,'&#39;');
      }

      function buildHrefFromCard(b){
        if (b && b.href) return b.href; // server provided deep link

        const src = (b.source || '').toLowerCase();
        const id  = b.identifier || '';
        const ia  = b.archiveId || (src === 'archive' ? id : '');
        if (ia) {
          return '/read/book/' + encodeURIComponent(ia);
        } else if (src === 'gutenberg') {
          const gid = String(id).replace(/^gutenberg:/,'');
          const qs  = b.readerUrl ? ('?u=' + encodeURIComponent(b.readerUrl)) : '';
          return '/read/gutenberg/' + encodeURIComponent(gid) + '/reader' + qs;
        }
        return b.readerUrl || '#';
      }

      function brandFromSource(src){
        const s = (src || '').toLowerCase();
        if (s === 'archive') return 'Open library';
        if (s === 'gutenberg') return 'Open library';
        if (s === 'openlibrary') return 'Open library';
        return 'Book';
      }

      // Gate all homepage book clicks: guests go to /login?next=...
      function gatedHref(dest){
        if (IS_LOGGED_IN) return dest;
        return '/login?next=' + encodeURIComponent(dest || '/');
      }

      function cardTemplate(b){
        const dest  = buildHrefFromCard(b);
        const href  = gatedHref(dest);
        const internal = IS_LOGGED_IN && (b.archiveId || (b.source||'').toLowerCase()==='archive' || (b.source||'').toLowerCase()==='gutenberg');

        return `
          <article class="card fade-in">
            <a href="${href}" ${internal ? '' : 'rel="noopener"'} style="text-decoration:none;color:inherit">
              <div class="thumb">
                ${b.cover ? `<img src="${b.cover}" alt="${escapeHtml(b.title || '')}" loading="lazy" referrerpolicy="no-referrer">` : ''}
              </div>
              <div class="meta">
                <span class="badge">${brandFromSource(b.source)}</span>
                <h3>${escapeHtml(b.title || '')}</h3>
                <p>${escapeHtml(b.creator || '')}</p>
              </div>
            </a>
          </article>
        `;
      }

      function renderGrid(items, targetEl){
        if (!items || !items.length) {
          targetEl.innerHTML = '<div class="hint">No books found right now. Try a search above.</div>';
          return;
        }
        targetEl.innerHTML = items.map(cardTemplate).join('');
      }

      function shelfTemplate(shelf){
        const cards = (shelf.items || []).map(cardTemplate).join('');
        return `
          <div class="shelf">
            <div class="shelf-header">
              <h2>${escapeHtml(shelf.title)}</h2>
              <a class="hint" href="/read?query=${encodeURIComponent(shelf.q)}">See more</a>
            </div>
            <div class="shelf-row">
              ${cards}
            </div>
          </div>
        `;
      }

      async function loadFeatured(){
        try {
          const r = await fetch('/api/featured-books', { credentials: 'same-origin' });
          if (!r.ok) throw new Error('Bad status');
          const data = await r.json();
          const items =
            Array.isArray(data) ? data :
            (Array.isArray(data.items) ? data.items :
            (Array.isArray(data.results) ? data.results : []));
          renderGrid(items, featuredGrid);
        } catch (e) {
          featuredGrid.innerHTML = '<div class="hint">Could not load books. Try refreshing.</div>';
          console.error('featured error', e);
        }
      }

      async function loadShelves(){
        try {
          const r = await fetch('/api/shelves', { credentials: 'same-origin' });
          if (!r.ok) throw new Error('Bad status');
          const data = await r.json();
          const shelves = Array.isArray(data.shelves) ? data.shelves : [];
          shelvesRoot.innerHTML = shelves.map(shelfTemplate).join('');
        } catch (e) {
          console.error('shelves error', e);
        }
      }

      loadFeatured();
      loadShelves();
    })();
  </script>
</body>
</html>
