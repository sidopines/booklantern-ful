<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('partials/head') %>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Login · BookLantern</title>
  <style>
    #auth-status{font-family:ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;
      max-width:720px;margin:3rem auto;padding:1rem 1.25rem;border:1px solid rgba(0,0,0,.08);border-radius:12px}
    #auth-status .muted{opacity:.75}
    #auth-status .error{color:#b00020;white-space:pre-wrap;word-break:break-word}
  </style>
  <!-- Expose env for EJS (works if process.env or app.locals is set) -->
  <meta id="sb-env"
        data-url="<%= (typeof SUPABASE_URL!=='undefined' && SUPABASE_URL) || (process.env.SUPABASE_URL || '') %>"
        data-key="<%= (typeof SUPABASE_ANON_KEY!=='undefined' && SUPABASE_ANON_KEY) || (process.env.SUPABASE_ANON_KEY || '') %>">
</head>
<body>
  <%- include('partials/navbar') %>

  <main>
    <section id="auth-status">
      <h1>Sign in</h1>
      <p class="muted">If you clicked a magic link in your email, this page will complete your sign-in automatically.</p>
      <div id="auth-progress" class="muted">Waiting for tokens…</div>
      <pre id="auth-error" class="error" style="display:none"></pre>
      <noscript><p class="error">JavaScript is required to sign in.</p></noscript>
    </section>
  </main>

  <%- include('partials/footer') %>

  <!-- ✅ UMD bundle: no /npm subrequests, no modules -->
  <script src="https://unpkg.com/@supabase/supabase-js@2.45.4/dist/umd/supabase.js" defer></script>

  <script>
    (function(){
      const statusEl = document.getElementById('auth-progress');
      const errEl = document.getElementById('auth-error');
      const envEl = document.getElementById('sb-env');

      function setStatus(t){ if(statusEl) statusEl.textContent = t; }
      function showError(e){
        if(!errEl) return;
        errEl.style.display='block';
        errEl.textContent = (e && e.message) ? e.message : (typeof e==='string'? e : JSON.stringify(e,null,2));
      }
      function parseHashParams(){
        const h = window.location.hash||''; if(!h || h.length<2) return null;
        return new URLSearchParams(h[0]==='#'? h.slice(1):h);
      }
      function nextParam(){
        try{ return new URL(window.location.href).searchParams.get('next'); }catch{ return null; }
      }

      async function run(){
        try{
          const SUPABASE_URL = envEl?.getAttribute('data-url') || '';
          const SUPABASE_ANON_KEY = envEl?.getAttribute('data-key') || '';
          if(!SUPABASE_URL || !SUPABASE_ANON_KEY){
            setStatus('Missing Supabase configuration.');
            showError('SUPABASE_URL / SUPABASE_ANON_KEY are not available to this page.');
            return;
          }

          setStatus('Initializing…');
          // window.supabase is provided by UMD bundle
          const client = window.supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
          const DEFAULT_REDIRECT = '/dashboard';

          const hash = parseHashParams();
          const hasTokens = hash && (hash.has('access_token') || hash.has('code'));

          if(hasTokens){
            setStatus('Completing sign-in from magic link…');
            const { data, error } = await client.auth.getSessionFromUrl({ storeSession:true, persistSession:true });
            if(error){ setStatus('Sign-in failed.'); showError(error); return; }

            const { data: chk } = await client.auth.getSession();
            if(!chk?.session?.access_token){ setStatus('Could not establish session.'); showError('No access token after getSessionFromUrl.'); return; }

            setStatus('Signed in. Redirecting…');
            const n = nextParam();
            const target = (n && n.startsWith('/')) ? n : DEFAULT_REDIRECT;
            window.location.replace(target);
            return;
          }

          // If already signed in, bounce away from /login
          const { data: chk } = await client.auth.getSession();
          if(chk?.session?.access_token){
            setStatus('You are already signed in. Redirecting…');
            const n = nextParam();
            window.location.replace((n && n.startsWith('/')) ? n : DEFAULT_REDIRECT);
            return;
          }

          setStatus('No tokens found. Please request a magic link to sign in.');
        }catch(e){
          setStatus('Unexpected error.');
          showError(e);
        }
      }

      // Wait for UMD to load
      if(document.readyState === 'complete' || document.readyState === 'interactive'){
        window.addEventListener('load', run);
      } else {
        document.addEventListener('DOMContentLoaded', () => window.addEventListener('load', run));
      }
    })();
  </script>
</body>
</html>
