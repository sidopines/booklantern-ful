<!doctype html>
<html lang="en">
<head>
  <%- include('./partials/head', {
    pageTitle: 'Login â€¢ BookLantern',
    pageDescription: 'Log in to save bookmarks and notes across devices.',
    canonicalUrl: (typeof canonicalUrl !== 'undefined' ? canonicalUrl : '')
  }) %>
</head>
<body>
  <%- include('./partials/navbar') %>

  <main class="container" style="max-width:700px; margin:28px auto; padding:0 16px;">
    <h1>Login</h1>
    <p class="ink-2">Use your email and password, or continue with Google / Apple.</p>

    <!-- status banner -->
    <div id="banner" class="card" style="display:none; padding:10px; margin:12px 0;"></div>

    <form id="loginForm" class="card" style="padding:16px; margin-top:12px;" novalidate>
      <div class="stack" style="--gap:10px;">
        <input class="input" type="email" id="email" placeholder="you@example.com" autocomplete="email" required>
        <input class="input" type="password" id="password" placeholder="Your password" autocomplete="current-password" required>

        <div class="row" style="gap:8px; flex-wrap:wrap;">
          <button class="btn btn-primary" type="submit" id="loginBtn">Log in</button>
          <button class="btn" id="reset" type="button">Send reset link</button>
          <a class="btn" href="/register">Donâ€™t have an account? Create one</a>
        </div>

        <div class="ink-2" style="margin-top:-6px;">Forgot password? Use the reset link above.</div>

        <hr style="border:none; border-top:1px solid rgba(0,0,0,.08); margin:6px 0;">

        <div class="row" style="gap:8px; flex-wrap:wrap;">
          <button class="btn" id="google" type="button">Continue with Google</button>
          <button class="btn" id="apple" type="button">Continue with Apple</button>
        </div>

        <div id="msg" class="ink-2"></div>
      </div>
    </form>
  </main>

  <%- include('./partials/footer') %>

  <script>
  (function(){
    const sb = window.supabaseClient;
    const banner = document.getElementById('banner');
    const msgEl = document.getElementById('msg');
    const loginBtn = document.getElementById('loginBtn');

    function setBanner(text, kind){
      if (!text) {
        banner.style.display='none';
        banner.textContent='';
        return;
      }
      banner.style.display='block';
      banner.textContent = text;
      // simple coloring by kind
      if (kind === 'ok') {
        banner.style.background = '#e6f7ed';
        banner.style.border = '1px solid #b7ebc6';
      } else if (kind === 'warn') {
        banner.style.background = '#fff7e6';
        banner.style.border = '1px solid #ffe7ba';
      } else {
        banner.style.background = '#f5f5f5';
        banner.style.border = '1px solid rgba(0,0,0,.08)';
      }
    }

    function setMsg(t){ msgEl.textContent = t || ''; }
    function getBase(){ return (location.origin || '<%= process.env.SITE_URL || "" %>'); }

    // --- Show banners from query params ---
    (function(){
      try {
        const qp = new URLSearchParams(location.search);
        if (qp.has('confirmed')) setBanner('âœ… Your email has been verified. You can log in now.', 'ok');
        else if (qp.get('reset') === '1') setBanner('ðŸ“¬ Check your inbox for a password reset link.', 'info');
        else if (qp.get('reset') === 'done') setBanner('âœ… Your password has been updated. Please log in.', 'ok');
        // Optional: show error passed back by providers
        const err = qp.get('error_description') || qp.get('error');
        if (err) setBanner(err, 'warn');
      } catch(e) {}
    })();

    // --- Email/password login ---
    document.getElementById('loginForm').addEventListener('submit', async (e)=>{
      e.preventDefault();
      setMsg('');
      const email = document.getElementById('email').value.trim();
      const password = document.getElementById('password').value;

      loginBtn.disabled = true;
      loginBtn.textContent = 'Signing inâ€¦';

      const { error } = await sb.auth.signInWithPassword({ email, password });
      if (error) {
        setMsg(error.message);
        loginBtn.disabled = false;
        loginBtn.textContent = 'Log in';
        return;
      }
      location.href = '/account';
    });

    // --- Reset link (DASHBOARD-ONLY FLOW) ---
    document.getElementById('reset').addEventListener('click', async ()=>{
      setMsg('');
      const email = document.getElementById('email').value.trim();
      if (!email) return setMsg('Enter your email first.');

      // IMPORTANT CHANGE:
      // Send users to a simple "done" page on your site after they finish on Supabaseâ€™s password UI.
      const redirectTo = getBase() + '/login?reset=done';

      const { error } = await sb.auth.resetPasswordForEmail(email, { redirectTo });
      if (error) return setMsg(error.message);

      // Show "check your inbox" banner
      location.href = '/login?reset=1';
    });

    // --- OAuth ---
    document.getElementById('google').addEventListener('click', async ()=>{
      await sb.auth.signInWithOAuth({
        provider: 'google',
        options: { redirectTo: getBase() + '/auth/callback' }
      });
    });

    document.getElementById('apple').addEventListener('click', async ()=>{
      await sb.auth.signInWithOAuth({
        provider: 'apple',
        options: { redirectTo: getBase() + '/auth/callback' }
      });
    });
  })();
  </script>
</body>
</html>
