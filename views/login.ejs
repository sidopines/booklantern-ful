<!DOCTYPE html>
<html lang="en">
<head>
  <!-- Ultra-early forwarder: if auth params are present on /login, hand them to /auth/callback immediately -->
  <script>
    (function forwardAuthNow(){
      try {
        if (location.pathname === '/auth/callback') return;
        var q = location.search || '';
        var h = location.hash   || '';
        var hasHashTokens = /(?:^|[#&])access_token=|(?:^|[#&])refresh_token=/.test(h);
        var hasQueryTokens = /[?&](code|token_hash)=/.test(q);
        if (hasHashTokens || hasQueryTokens) {
          // Keep the whole search + hash so auth-callback can finish the session
          location.replace('/auth/callback' + q + h);
        }
      } catch(_) {}
    })();
  </script>

  <%- include('partials/head'); %>
</head>
<body onload="(function(){try{
  var q=location.search||'', h=location.hash||'';
  if(/(?:^|[#&])access_token=|(?:^|[#&])refresh_token=/.test(h) || /[?&](code|token_hash)=/.test(q)){
    location.replace('/auth/callback'+q+h);
  }
}catch(_){}})();">

  <!-- Safety net: run again after DOM is ready (Safari timing quirk) -->
  <script>
    document.addEventListener('DOMContentLoaded', function(){
      try {
        var q=location.search||'', h=location.hash||'';
        if(/(?:^|[#&])access_token=|(?:^|[#&])refresh_token=/.test(h) || /[?&](code|token_hash)=/.test(q)){
          location.replace('/auth/callback'+q+h);
        }
      } catch(_){}
      // Watchdog: one more try in case extensions delay script execution
      setTimeout(function(){
        try {
          var q=location.search||'', h=location.hash||'';
          if(/(?:^|[#&])access_token=|(?:^|[#&])refresh_token=/.test(h) || /[?&](code|token_hash)=/.test(q)){
            location.replace('/auth/callback'+q+h);
          }
        } catch(_){}
      }, 400);
    });
  </script>

  <%- include('partials/navbar'); %>

  <main class="page-wrap" style="max-width:900px;margin:32px auto 72px;">
    <h1 class="page-title">Login</h1>

    <section class="card" style="border:1px solid #eee;border-radius:12px;padding:16px;background:#fff;">
      <div id="msg" style="display:none;margin:0 0 12px;padding:10px;border-radius:8px;"></div>

      <p>Use a one-time link we email to you, or continue with Google / Apple.</p>

      <form id="magic-form" class="login-form" onsubmit="return false;" style="display:flex;gap:8px;align-items:center;flex-wrap:wrap;">
        <input id="email" type="email" placeholder="you@example.com" required
               style="flex:1;min-width:260px;padding:10px;border:1px solid #ddd;border-radius:8px;">
        <button id="sendLink" class="btn" type="button">Send sign-in link</button>
        <a class="btn btn-ghost" href="/register">Don’t have an account? Create one</a>
      </form>

      <div style="margin-top:12px;display:flex;gap:8px;flex-wrap:wrap;">
        <a id="btnGoogle" class="btn" href="/auth/oauth/google">Continue with Google</a>
        <a id="btnApple"  class="btn" href="/auth/oauth/apple">Continue with Apple</a>
      </div>

      <p style="margin-top:12px;font-size:0.95rem;color:#555;">
        Having trouble? Check your spam folder, or request another link.
      </p>
    </section>
  </main>

  <%- include('partials/footer'); %>

  <script>
    (function () {
      // Final safety: if tokens still present for any reason, forward again.
      (function finalCheck(){
        try {
          var q=location.search||'', h=location.hash||'';
          if(/(?:^|[#&])access_token=|(?:^|[#&])refresh_token=/.test(h) || /[?&](code|token_hash)=/.test(q)){
            location.replace('/auth/callback'+q+h);
            return;
          }
        } catch(_){}
      })();

      var sb  = window.supabaseClient;
      var msg = document.getElementById('msg');
      var btn = document.getElementById('sendLink');

      function show(type, text){
        if (!msg) return;
        msg.style.display = 'block';
        msg.textContent   = text;
        msg.style.background = type === 'ok' ? '#e8f7e8' : '#ffecec';
        msg.style.border     = type === 'ok' ? '1px solid #b7e2b7' : '1px solid #ffcdcd';
        msg.style.color      = '#222';
      }

      (async function autoRedirectIfSignedIn(){
        try {
          if (!sb) return;
          var res = await sb.auth.getSession();
          if (res && res.data && res.data.session) {
            try { history.replaceState({}, document.title, location.pathname); } catch (_) {}
            location.href = '/account';
          }
        } catch (e) { /* ignore */ }
      })();

      if (btn) {
        btn.addEventListener('click', async function(){
          var email = (document.getElementById('email').value || '').trim();

          if (!email) { show('err','Enter your email first.'); return; }
          if (!window.supabaseClient) { show('err','Auth is not configured on the client.'); return; }

          btn.disabled = true;
          var prior = btn.textContent;
          btn.textContent = 'Sending…';
          try {
            var res = await window.supabaseClient.auth.signInWithOtp({
              email: email,
              options: {
                emailRedirectTo: window.location.origin + '/auth/callback',
                shouldCreateUser: true
              }
            });
            if (res && res.error) throw res.error;
            show('ok','✅ The sign-in link has been emailed to you. Please check your inbox.');
          } catch (e) {
            show('err', e && e.message ? e.message : 'Could not send link.');
          } finally {
            btn.disabled = false;
            btn.textContent = prior;
          }
        });
      }

      function hookOAuth(anchorEl, provider){
        if (!anchorEl) return;
        anchorEl.addEventListener('click', async function(e){
          try {
            if (!window.supabaseClient) return; // fall back to server href
            e.preventDefault();
            await window.supabaseClient.auth.signInWithOAuth({
              provider: provider,
              options: {
                redirectTo: window.location.origin + '/auth/callback',
                skipBrowserRedirect: false
              }
            });
          } catch (_) {
            window.location.href = anchorEl.getAttribute('href');
          }
        });
      }
      hookOAuth(document.getElementById('btnGoogle'), 'google');
      hookOAuth(document.getElementById('btnApple'),  'apple');
    })();
  </script>
</body>
</html>
