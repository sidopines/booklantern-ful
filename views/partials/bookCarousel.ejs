<%
// Accessible horizontal book carousel with left/right navigation
const carouselId = locals.id || 'carousel';
const title = locals.title || 'Books';
const items = locals.items || [];

// Dedupe items by ID, URL, or title
const seen = new Set();
const uniqueItems = items.filter(item => {
  const key = item.id || item.url || item.readUrl || item.title;
  if (seen.has(key)) return false;
  seen.add(key);
  return true;
});

// Only render if we have items
if (uniqueItems.length === 0) {
  return;
}
%>

<section class="carousel-section">
  <div class="container">
    <div class="carousel-header">
      <h2 class="section-title"><%= title %></h2>
      <div class="carousel-nav">
        <button 
          class="carousel-btn" 
          id="<%= carouselId %>-prev"
          aria-label="Previous books in <%= title %>"
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="15,18 9,12 15,6"></polyline>
          </svg>
        </button>
        <button 
          class="carousel-btn" 
          id="<%= carouselId %>-next"
          aria-label="Next books in <%= title %>"
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9,18 15,12 9,6"></polyline>
          </svg>
        </button>
      </div>
    </div>

    <div class="carousel" id="<%= carouselId %>">
      <div class="carousel-track" role="region" aria-labelledby="<%= carouselId %>-title">
        <% uniqueItems.forEach(function(item) { %>
          <%- include('./bookCard.ejs', { book: item }) %>
        <% }) %>
      </div>
    </div>
  </div>
</section>

<script>
// Accessible carousel navigation for <%= carouselId %>
document.addEventListener('DOMContentLoaded', function() {
  const carousel = document.getElementById('<%= carouselId %>');
  const track = carousel?.querySelector('.carousel-track');
  const prevBtn = document.getElementById('<%= carouselId %>-prev');
  const nextBtn = document.getElementById('<%= carouselId %>-next');
  
  if (!track || !prevBtn || !nextBtn) return;

  const scrollAmount = 220; // Slightly more than card width
  
  function updateButtons() {
    const isAtStart = track.scrollLeft <= 0;
    const isAtEnd = track.scrollLeft >= track.scrollWidth - track.clientWidth - 1;
    
    prevBtn.disabled = isAtStart;
    nextBtn.disabled = isAtEnd;
    
    prevBtn.style.opacity = isAtStart ? '0.5' : '1';
    nextBtn.style.opacity = isAtEnd ? '0.5' : '1';
  }

  prevBtn.addEventListener('click', () => {
    track.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
  });

  nextBtn.addEventListener('click', () => {
    track.scrollBy({ left: scrollAmount, behavior: 'smooth' });
  });

  // Keyboard navigation
  track.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft') {
      e.preventDefault();
      track.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
    } else if (e.key === 'ArrowRight') {
      e.preventDefault();
      track.scrollBy({ left: scrollAmount, behavior: 'smooth' });
    }
  });

  track.addEventListener('scroll', updateButtons);
  updateButtons(); // Initial state
});
</script>

<style>
/* Carousel section styles */
.carousel-section {
  margin: 48px 0;
}

.carousel-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 24px;
  position: relative;
}

.carousel-nav {
  display: flex;
  gap: 8px;
}

.carousel-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--surface);
  border: 1px solid #e5e7eb;
  color: var(--ink);
  transition: all 0.2s ease;
  cursor: pointer;
}

.carousel-btn:hover:not(:disabled) {
  background: var(--brand);
  color: white;
  border-color: var(--brand);
}

.carousel-btn:disabled {
  cursor: not-allowed;
}

.carousel-track {
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.carousel-track::-webkit-scrollbar {
  display: none;
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .carousel-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 16px;
  }

  .carousel-nav {
    align-self: flex-end;
  }

  .carousel-section {
    margin: 32px 0;
  }
}
</style>