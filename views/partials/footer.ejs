<!-- Clean, Everand-inspired footer -->
<footer class="footer">
  <div class="container">
    <div class="footer-content">
      <!-- Brand Section -->
      <div class="footer-brand">
        <a href="/" class="footer-logo">
          <img src="/img/brand.svg" alt="BookLantern" width="24" height="24">
          BookLantern
        </a>
        <p class="footer-description">
          Millions of books from globally trusted libraries, searchable in one place with a clean reader experience.
        </p>
      </div>

      <!-- Links Grid -->
      <div class="footer-links">
        <!-- Help & Contact -->
        <div class="footer-section">
          <h4>Help & Contact</h4>
          <ul>
            <li><a href="/contact">Contact Us</a></li>
            <li><a href="/about">About</a></li>
            <li><a href="/read">Browse Books</a></li>
            <li><a href="/watch">Educational Videos</a></li>
          </ul>
        </div>

        <!-- Legal -->
        <div class="footer-section">
          <h4>Legal</h4>
          <ul>
            <li><a href="/privacy">Privacy Policy</a></li>
            <li><a href="/terms">Terms of Service</a></li>
            <li><a href="/sitemap.xml">Sitemap</a></li>
          </ul>
        </div>
      </div>
    </div>

    <!-- Footer Bottom -->
    <div class="footer-bottom">
      <p>&copy; <%= new Date().getFullYear() %> BookLantern. All rights reserved.</p>
    </div>
  </div>
</footer>

<script>
// ---------- Carousel short-row centering ----------
(function(){
  function markShortTracks(){
    document.querySelectorAll('.carousel-track').forEach(t=>{
      t.classList.remove('is-short');
      if (t.scrollWidth <= t.clientWidth + 1) t.classList.add('is-short');
    });
  }
  window.addEventListener('DOMContentLoaded', markShortTracks);
  window.addEventListener('resize', markShortTracks);
})();

// ---------- Listen (event delegation, robust controls) ----------
(function(){
  const synth = ('speechSynthesis' in window) ? window.speechSynthesis : null;
  let utter = null, toast = null;

  function ensureToast(){
    if (toast) return toast;
    toast = document.createElement('div');
    toast.className = 'toast';
    toast.innerHTML = `
      <div class="text" style="max-width:360px"></div>
      <div class="actions">
        <button class="btn" data-act="play" type="button">Play</button>
        <button class="btn secondary" data-act="pause" type="button">Pause</button>
        <button class="btn secondary" data-act="stop" type="button">Stop</button>
      </div>`;
    document.body.appendChild(toast);

    toast.querySelector('[data-act="play"]').addEventListener('click', ()=> {
      if (!synth || !utter) return;
      if (synth.paused) { synth.resume(); return; }
      if (!synth.speaking) { synth.speak(utter); }
    });
    toast.querySelector('[data-act="pause"]').addEventListener('click', ()=> {
      if (synth && synth.speaking && !synth.paused) synth.pause();
    });
    toast.querySelector('[data-act="stop"]').addEventListener('click', ()=> {
      if (synth) synth.cancel();
      toast.classList.remove('show');
    });
    return toast;
  }

  function pickVoice(){
    if (!synth) return null;
    const voices = synth.getVoices();
    return voices.find(v=>/en[-_]US/i.test(v.lang)) || voices[0] || null;
  }

  // Event delegation: works for all present/future Listen buttons
  document.addEventListener('click', function(e){
    const btn = e.target.closest('[data-bl-listen]');
    if (!btn) return;

    const summary = btn.getAttribute('data-bl-listen') || 'Preview not available.';
    if (!synth) { alert(summary); return; }

    // Cancel anything current and create a new utterance
    synth.cancel();
    utter = new SpeechSynthesisUtterance(summary);
    const v = pickVoice(); if (v) utter.voice = v;
    utter.rate = 1.0; utter.pitch = 1.0;
    utter.onend = ()=> { if (toast) toast.classList.remove('show'); };
    utter.onerror = ()=> { if (toast) toast.classList.remove('show'); };

    const t = ensureToast();
    t.querySelector('.text').textContent = summary;
    t.classList.add('show');

    // Speak immediately (user gesture)
    synth.speak(utter);
  });

  if (synth && typeof synth.onvoiceschanged !== 'undefined') {
    synth.onvoiceschanged = function(){ /* voices ready */ };
  }
})();
</script>

<style>
/* Clean footer styles */
.footer-content {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 48px;
  margin-bottom: 32px;
}

.footer-brand {
  max-width: 320px;
}

.footer-logo {
  display: flex;
  align-items: center;
  gap: 8px;
  text-decoration: none;
  color: var(--ink);
  font-weight: 600;
  font-size: 18px;
  margin-bottom: 16px;
}

.footer-description {
  color: var(--ink-weak);
  line-height: 1.5;
  margin: 0;
  font-size: 14px;
}

.footer-links {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 32px;
}

.footer-section h4 {
  font-size: 16px;
  font-weight: 600;
  color: var(--ink);
  margin: 0 0 16px;
}

.footer-section ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.footer-section li {
  margin-bottom: 8px;
}

.footer-section a {
  color: var(--ink-weak);
  text-decoration: none;
  font-size: 14px;
  transition: color 0.2s ease;
}

.footer-section a:hover {
  color: var(--brand);
}

.footer-bottom {
  border-top: 1px solid #eef0f4;
  padding-top: 24px;
  text-align: center;
}

.footer-bottom p {
  color: var(--ink-weak);
  font-size: 14px;
  margin: 0;
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .footer-content {
    grid-template-columns: 1fr;
    gap: 32px;
  }
  
  .footer-links {
    grid-template-columns: 1fr;
    gap: 24px;
  }
  
  .footer-brand {
    max-width: none;
  }
}
</style>