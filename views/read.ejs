<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('./partials/head.ejs', {
    pageTitle: 'Read Books Online',
    pageDescription: "Browse and read books fetched from multiple free sources using BookLantern's modern reader experience."
  }) %>
  <style>
    :root { --bg:#f6f7fb; --text:#111; --muted:#667085; --card:#fff; --border:#e5e7eb; --brand:#111; --brandHover:#333; --link:#1256b3; }
    body { margin:0; background:var(--bg); color:var(--text); font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif; }
    .wrap { min-height:100vh; display:flex; flex-direction:column; }
    main { width:100%; max-width:1100px; margin:0 auto; padding:18px 16px 60px; }
    .back-link { display:inline-block; margin:6px 0 10px; color:var(--link); text-decoration:none; }
    h1 { margin:0 0 12px; font-size:1.8rem; }
    form.search { display:flex; gap:8px; margin:10px 0 16px; }
    form.search input { flex:1; padding:.7rem .8rem; border:1px solid var(--border); border-radius:10px; background:#fff; font-size:1rem; }
    form.search button { padding:.7rem 1rem; border:1px solid var(--border); border-radius:10px; background:#fff; cursor:pointer; }
    .hint { color:var(--muted); font-size:.95rem; }
    .book-grid { display:grid; grid-template-columns:repeat(auto-fill, minmax(210px,1fr)); gap:14px; margin-top:10px; }
    .book-card { background:var(--card); border:1px solid var(--border); border-radius:14px; padding:10px; display:flex; flex-direction:column; gap:8px; }
    .thumb{ width:100%; aspect-ratio:3/4; background:#f3f4f6; border:1px solid var(--border); border-radius:10px; overflow:hidden; display:flex; align-items:center; justify-content:center; }
    .thumb img{ width:100%; height:100%; object-fit:cover; display:block; }
    h3 { font-size:1rem; margin:.2rem 0 .1rem; line-height:1.25; }
    p.meta { margin:0; color:var(--muted); font-size:.92rem; }
    .badge{ display:inline-block; font-size:.78rem; padding:.25rem .5rem; border:1px solid var(--border); border-radius:999px; background:#fff; color:#222; }
    .row { display:flex; align-items:center; gap:8px; justify-content:space-between; }
    .action a.btn, .btn { padding:.55rem .75rem; border:1px solid var(--border); border-radius:10px; background:#fff; text-decoration:none; color:#111; font-weight:600; font-size:.95rem; display:inline-block; }
    .listen-chip { font-size:.85rem; padding:.35rem .6rem; border-radius:10px; border:1px solid var(--border); background:#fff; cursor:pointer; }
    .empty { margin:18px 0; padding:12px; border:1px dashed var(--border); border-radius:12px; color:var(--muted); }
    footer { text-align:center; color:var(--muted); padding:28px 8px; }
  </style>
</head>
<body>
  <%- include('./partials/navbar.ejs') %>
  <div class="wrap">
    <main>
      <a href="javascript:history.back()" class="back-link">‚Üê Back</a>
      <h1>üìö Explore Free Books</h1>

      <form class="search" action="/read" method="GET" novalidate>
        <input
          type="text"
          name="query"
          placeholder="Search books by title or author"
          value="<%= typeof query !== 'undefined' ? String(query) : '' %>">
        <button type="submit">Search</button>
      </form>

      <% const hasQuery = (typeof query !== 'undefined' && String(query).trim() !== ''); %>

      <% if (!books || !Array.isArray(books) || books.length === 0) { %>
        <% if (hasQuery) { %>
          <div class="empty">No books found. Try another search term.</div>
        <% } else { %>
          <div class="hint">Type a title, author, or topic above to begin.</div>
        <% } %>
      <% } else { %>
        <div class="book-grid">
          <% books.forEach(function(book){ 
               const src  = String(book.source || '').toLowerCase();
               const id   = String(book.identifier || book._id || '');
               const title = String(book.title || '(Untitled)');
               const author = String(book.creator || book.author || '');
               const cover = String(book.cover || '');
               
               // detect Gutenberg id
               const gutenId = id.startsWith('gutenberg:') ? id.split(':')[1] : (src==='gutenberg' ? id : '');

               // compute destination
               let dest = '#';
               if (String(book.readerUrl || '').trim()) {
                 dest = String(book.readerUrl);
               } else if (src === 'gutenberg' && gutenId) {
                 dest = `/read/gutenberg/${encodeURIComponent(gutenId)}/reader?title=${encodeURIComponent(title)}&author=${encodeURIComponent(author)}`;
               } else if (src === 'archive' && (book.archiveId || id.startsWith('archive:'))) {
                 const aid = book.archiveId || id.split(':')[1] || id;
                 dest = `/read/book/${encodeURIComponent(aid)}`;
               }

               // gate guests to auth before reading
               let finalHref = dest;
               %>
            <div class="book-card" data-source="<%= src %>">
              <a href="<%= finalHref %>" style="text-decoration:none;color:inherit">
                <div class="thumb">
                  <% if (cover) { %>
                    <img src="<%= cover %>" alt="<%= title %>" loading="lazy" referrerpolicy="no-referrer">
                  <% } else { %>
                    <span class="hint">No Cover</span>
                  <% } %>
                </div>
                <h3><%= title %></h3>
                <p class="meta"><%= author %></p>
                <div class="row">
                  <span class="badge">
                    <%= src === 'gutenberg' ? 'Project Gutenberg'
                      : src === 'archive' ? 'Archive.org'
                      : src === 'standardebooks' ? 'Standard Ebooks'
                      : src === 'feedbooks' ? 'Feedbooks PD'
                      : (src ? src[0].toUpperCase()+src.slice(1) : 'Book') %>
                  </span>
                  <% if (src === 'gutenberg') { %>
                    <button class="listen-chip"
                            type="button"
                            data-gid="<%= gutenId %>"
                            data-title="<%- String(title).replace(/"/g,'&quot;') %>"
                            data-author="<%- String(author).replace(/"/g,'&quot;') %>"
                            aria-pressed="false"
                            title="Preview by listening">
                      üîä Listen
                    </button>
                  <% } %>
                </div>
                <div class="action" style="margin-top:.5rem;">
                  <span class="btn">üìñ Read Now</span>
                </div>
              </a>
            </div>
          <% }) %>
        </div>
      <% } %>
    </main>

    <footer>
      &copy; <%= new Date().getFullYear() %> BookLantern ‚Ä¢ Built on open libraries ‚Ä¢ <a href="/about">About</a>
    </footer>
  </div>

  <script>
    // Optional: preview "Listen" using the first page of Gutenberg text
    document.addEventListener('click', async (e) => {
      const btn = e.target.closest('.listen-chip');
      if (!btn) return;
      const gid = btn.getAttribute('data-gid');
      if (!gid) return;
      btn.disabled = true;
      try{
        const r = await fetch(`/read/gutenberg/${encodeURIComponent(gid)}/text`, { credentials:'same-origin' });
        const data = await r.json();
        if (data && (data.content || '').length) {
          const excerpt = String(data.content).slice(0, 3500).replace(/\s+/g,' ').trim();
          window.speechSynthesis.cancel();
          const u = new SpeechSynthesisUtterance(excerpt);
          u.rate = 1; u.pitch = 1;
          const voices = window.speechSynthesis.getVoices();
          if (voices && voices.length) u.voice = voices.find(v => /en/i.test(v.lang)) || voices[0];
          window.speechSynthesis.speak(u);
        } else {
          alert('Could not load a preview for this title.');
        }
      }catch(err){
        console.error('listen preview error', err);
        alert('Preview failed. Try opening the book then tap Listen.');
      }finally{
        btn.disabled = false;
      }
    });
  </script>
</body>
</html>
