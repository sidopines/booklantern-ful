<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('./partials/head.ejs', {
    pageTitle: (typeof pageTitle !== 'undefined' && pageTitle) ? pageTitle : 'Explore Free Books',
    pageDescription: (typeof pageDescription !== 'undefined' && pageDescription) ? pageDescription : 'Search and read books in a clean, unified reader.'
  }) %>
  <style>
    .wrap{max-width:1100px;margin:0 auto;padding:1.25rem}
    .back-link{display:inline-block;margin:.5rem 0 .75rem;color:#334155;text-decoration:none}
    h1{font-size:1.75rem;margin:.25rem 0 1rem}
    form.search{display:flex;gap:.5rem;margin-bottom:1.25rem}
    form.search input[type="text"]{flex:1;border:1px solid #e5e7eb;border-radius:.6rem;padding:.65rem .8rem;font-size:1rem}
    form.search button{border:1px solid #e5e7eb;background:#111827;color:#fff;border-radius:.6rem;padding:.65rem .95rem;font-weight:600}

    .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(220px,1fr));gap:18px}
    .card{background:#fff;border:1px solid #e5e7eb;border-radius:.9rem;overflow:hidden;display:flex;flex-direction:column}
    .thumb{background:#f8fafc;aspect-ratio:3/4;display:grid;place-items:center}
    .thumb img{width:100%;height:100%;object-fit:cover}
    .meta{padding:.75rem}
    .badge{display:inline-block;font-size:.75rem;color:#475569;background:#f1f5f9;border:1px solid #e2e8f0;border-radius:.5rem;padding:.15rem .45rem;margin-bottom:.45rem}
    .title{font-weight:700;margin:.25rem 0 .15rem}
    .author{color:#64748b;font-size:.9rem;margin-bottom:.35rem}
    .actions{display:flex;gap:.4rem;margin-top:.35rem}
    .btn{border:1px solid #e2e8f0;background:#fff;border-radius:.55rem;padding:.45rem .6rem;font-weight:600;color:#111827;text-decoration:none;display:inline-flex;align-items:center;gap:.35rem}
    .btn.primary{background:#4f46e5;color:#fff;border-color:#4f46e5}
    .btn.small{padding:.35rem .5rem;font-size:.9rem}
    .hint{color:#64748b;margin:.75rem 0}
    .empty{border:1px dashed #e2e8f0;border-radius:.75rem;padding:1rem;color:#64748b}
    @media (max-width:640px){ h1{font-size:1.4rem} }
  </style>
</head>
<body>
  <%- include('./partials/navbar.ejs') %>

  <div class="wrap">
    <a class="back-link" href="javascript:history.back()">‚Üê Back</a>
    <h1>üìö Explore Free Books</h1>

    <form class="search" action="/read" method="GET" role="search">
      <input type="text" name="query" placeholder="Search books by title or author" value="<%= (typeof query !== 'undefined' && query) ? query : '' %>" aria-label="Search books">
      <button type="submit">Search</button>
    </form>

    <% const hasQuery = (typeof query !== 'undefined' && String(query).trim() !== ''); %>

    <% function textOf(x){ if (!x) return ''; if (Array.isArray(x)) return x.join(', '); if (typeof x === 'object') return (x.name||x.title||x.text||''); return String(x); } %>

    <% if (!books || books.length === 0) { %>
      <div class="empty">No books found. Try another search term.</div>
    <% } else { %>
      <div class="grid">
        <% books.forEach(function(book){ 
             const src   = String(book.source || '').toLowerCase();
             const id    = book.identifier || book._id || '';
             const title = textOf(book.title) || 'Untitled';
             const creator = textOf(book.creator || book.author || '');
             const cover = book.cover || '';
             const gid   = book.gid || (String(id).startsWith('gutenberg:') ? String(id).split(':')[1] : null);
             const wsLang  = book.wsLang || '';
             const wsTitle = book.wsTitle || '';
             // accessBadge is no longer used since we filter out non-readable items

             // Decide destination based on new card structure
             let dest = '#';
             let isDisabled = false;
             
             if (book.href && book.openInline === true) {
               // New structure: use href for on-site reading
               dest = book.href;
             } else if (book.readerUrl) {
               // Legacy structure: use readerUrl
               dest = book.readerUrl;
             } else if (src === 'gutenberg' && gid) {
               // Force EPUB mode so the reader opens ePub.js
               const qs = '?mode=epub'
                 + (title ? ('&title=' + encodeURIComponent(title)) : '')
                 + (creator ? ('&author=' + encodeURIComponent(creator)) : '');
               dest = `/read/gutenberg/${encodeURIComponent(gid)}/reader${qs}`;
             } else if (src === 'wikisource' && wsLang && wsTitle) {
               dest = `/read/wikisource/${encodeURIComponent(wsLang)}/${encodeURIComponent(wsTitle)}/reader`;
             } else if (book.pdfUrl) {
               // Our PDF viewer page (see pdf-viewer.ejs)
               const qs = '?src=' + encodeURIComponent(book.pdfUrl) 
                 + (title ? ('&title=' + encodeURIComponent(title)) : '');
               dest = '/read/pdf' + qs;
             }
             // No longer need to check accessBadge since we filter out non-readable items

             // Gate visitors to login before reading (unless disabled)
             let finalHref = isDisabled ? '#' : (dest || '#');
             %>
          <div class="card" data-source="<%= src %>">
            <% if (isDisabled) { %>
              <div style="text-decoration:none;color:inherit">
                <div class="thumb">
                  <% if (cover) { %>
                    <img src="<%= cover %>" alt="" loading="lazy" referrerpolicy="no-referrer">
                  <% } else { %>
                    <div class="hint">No cover</div>
                  <% } %>
                </div>
                <div class="meta">
                  <% if (src) { %>
                    <div class="badge"><%= (src==='gutenberg'?'Gutenberg':(src==='openlibrary'?'Open Library':(src==='archive'?'Archive.org':(src==='wikisource'?'Wikisource':(src==='standardebooks'?'Standard Ebooks':(src==='loc'?'LOC':src)))))) %></div>
                  <% } %>
                  <!-- accessBadge removed since we filter out non-readable items -->
                  <div class="title"><%= title %></div>
                  <% if (creator) { %><div class="author"><%= creator %></div><% } %>
                  <div class="actions">
                    <span class="btn small" style="background:#f3f4f6;color:#6b7280;border-color:#d1d5db;cursor:not-allowed;">üìñ Read</span>
                  </div>
                </div>
              </div>
            <% } else { %>
              <a href="<%= (user ? finalHref : ('/login?next=' + encodeURIComponent(finalHref))) %>" style="text-decoration:none;color:inherit">
                <div class="thumb">
                  <% if (cover) { %>
                    <img src="<%= cover %>" alt="" loading="lazy" referrerpolicy="no-referrer">
                  <% } else { %>
                    <div class="hint">No cover</div>
                  <% } %>
                </div>
                <div class="meta">
                  <% if (src) { %>
                    <div class="badge"><%= (src==='gutenberg'?'Gutenberg':(src==='openlibrary'?'Open Library':(src==='archive'?'Archive.org':(src==='wikisource'?'Wikisource':(src==='standardebooks'?'Standard Ebooks':(src==='loc'?'LOC':src)))))) %></div>
                  <% } %>
                  <div class="title"><%= title %></div>
                  <% if (creator) { %><div class="author"><%= creator %></div><% } %>
                  <div class="actions">
                    <span class="btn primary small">üìñ Read</span>
                    <% if (src === 'gutenberg' && gid) { %>
                      <button type="button" class="btn small preview-tts" data-gid="<%= gid %>" data-title="<%- title %>" aria-pressed="false" title="Preview first page by listening">üîä Listen</button>
                    <% } %>
                  </div>
                </div>
              </a>
            <% } %>
          </div>
        <% }) %>
      </div>
    <% } %>

    <div class="hint" style="margin-top:1rem">
      Tip: ‚ÄúListen‚Äù previews read the first page of a Project Gutenberg book without leaving this page.
    </div>
  </div>

  <script>
    // Tiny ‚ÄúListen preview‚Äù for Gutenberg cards
    (function(){
      const buttons = document.querySelectorAll('.preview-tts');
      if (!('speechSynthesis' in window)) return;

      function speak(text){
        window.speechSynthesis.cancel();
        const u = new SpeechSynthesisUtterance(text);
        u.rate = 1.0; u.volume = 1.0;
        window.speechSynthesis.speak(u);
      }
      async function firstChunk(gid){
        try{
          const r = await fetch('/read/gutenberg/' + encodeURIComponent(gid) + '/text', { credentials:'same-origin' });
          if (!r.ok) return '';
          const data = await r.json();
          let raw = (data && data.content) ? data.content : '';
          if (data && data.type === 'html') {
            const div = document.createElement('div');
            div.innerHTML = raw;
            raw = div.textContent || div.innerText || '';
          }
          // take a sensible bite
          return String(raw).trim().slice(0, 1200);
        }catch(e){
          return '';
        }
      }
      buttons.forEach(btn => {
        btn.addEventListener('click', async (ev)=>{
          ev.preventDefault(); ev.stopPropagation();
          const gid = btn.getAttribute('data-gid');
          btn.disabled = true; btn.textContent = '‚è≥';
          const chunk = await firstChunk(gid);
          btn.disabled = false; btn.textContent = 'üîä Listen';
          if (!chunk) { alert('Could not fetch a preview.'); return; }
          speak(chunk);
        });
      });
    })();
  </script>
</body>
</html>
