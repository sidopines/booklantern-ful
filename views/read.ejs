<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('./partials/head.ejs', {
    pageTitle: 'Read Books Online',
    pageDescription: "Browse and read books fetched from multiple free sources using BookLantern's modern reader experience."
  }) %>
  <link rel="stylesheet" href="/css/site.css">
</head>
<body>
  <%- include('./partials/navbar.ejs') %>

  <main class="container" style="padding:24px 0;">
    <a href="javascript:history.back()" class="hint" style="text-decoration:none;">‚Üê Back</a>
    <h1 style="margin:10px 0 18px;">üìö Explore Free Books</h1>

    <form action="/read" method="GET" class="searchbar" style="justify-content:flex-start;margin-left:0;">
      <input
        type="text"
        name="query"
        placeholder="Search books by title or author"
        value="<%= typeof query !== 'undefined' ? query : '' %>">
      <button class="btn" type="submit">Search</button>
    </form>
  </main>

  <% const hasQuery = (typeof query !== 'undefined' && String(query).trim() !== ''); %>

  <!-- STAFF PICKS (moved here from homepage). Only show when no search query -->
  <% if (!hasQuery) { %>
  <section class="section">
    <div class="container">
      <div class="shelf-header">
        <h2>Staff picks</h2>
        <div class="hint">Curated picks from across open libraries</div>
      </div>
      <div id="featured-grid" class="grid" aria-live="polite"></div>
    </div>
  </section>
  <% } %>

  <!-- RESULTS GRID -->
  <section class="section">
    <div class="container">
      <% if (!books || books.length === 0) { %>
        <div class="hint">No books found. Try another search term.</div>
      <% } else { %>
        <div class="grid">
          <% books.forEach(function(book){ %>
            <% 
              const src  = (book.source || '').toLowerCase();
              const id   = book.identifier || book._id || '';
              const ia   = book.archiveId || (src === 'archive' ? id : '');
              const isGutenberg = (src === 'gutenberg');
              const gutenId = isGutenberg ? String(id).replace(/^gutenberg:/,'') : '';

              // Build destination (prefer internal readers)
              let dest = '#';
              if (ia) {
                dest = `/read/book/${encodeURIComponent(ia)}`;
              } else if (isGutenberg) {
                const qs = book.readerUrl ? ('?u=' + encodeURIComponent(book.readerUrl)) : '';
                dest = `/read/gutenberg/${encodeURIComponent(gutenId)}/reader${qs}`;
              } else if (book.readerUrl) {
                dest = book.readerUrl;
              }

              // Gate visitors to login/register before reading
              if (!user) {
                dest = '/login?next=' + encodeURIComponent(dest || '/');
              }

              const internal = !!(ia || isGutenberg); // used for target attribute
              const brand = (src === 'archive') ? 'Archive.org'
                          : (src === 'gutenberg') ? 'Project Gutenberg'
                          : (src === 'openlibrary') ? 'Open Library'
                          : 'Book';
            %>
            <article class="card">
              <a href="<%= dest %>" <%= internal ? '' : 'target="_blank" rel="noopener"' %> style="text-decoration:none;color:inherit">
                <div class="thumb">
                  <% if (book.cover) { %>
                    <img src="<%= book.cover %>" alt="<%= book.title %>" loading="lazy" referrerpolicy="no-referrer">
                  <% } %>
                </div>
                <div class="meta">
                  <span class="badge"><%= brand %></span>
                  <h3><%= book.title %></h3>
                  <p><%= book.creator || book.author || '' %></p>
                </div>
              </a>
            </article>
          <% }) %>
        </div>
      <% } %>
    </div>
  </section>

  <footer class="footer">
    &copy; <%= new Date().getFullYear() %> BookLantern ‚Ä¢ Built on open libraries ‚Ä¢ <a href="/about">About</a>
  </footer>

  <% if (!hasQuery) { %>
  <!-- FETCH Staff picks -->
  <script>
    (function(){
      const IS_LOGGED_IN = <%= !!user %>;
      const grid = document.getElementById('featured-grid');

      function escapeHtml(s){
        return String(s || '')
          .replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;')
          .replace(/"/g,'&quot;').replace(/'/g,'&#39;');
      }

      function hrefFromCard(b){
        if (b && b.href) return b.href;
        const src = (b.source || '').toLowerCase();
        const id  = b.identifier || '';
        const ia  = b.archiveId || (src === 'archive' ? id : '');
        if (ia) return '/read/book/' + encodeURIComponent(ia);
        if (src === 'gutenberg') {
          const gid = String(id).replace(/^gutenberg:/,'');
          const qs  = b.readerUrl ? ('?u=' + encodeURIComponent(b.readerUrl)) : '';
          return '/read/gutenberg/' + encodeURIComponent(gid) + '/reader' + qs;
        }
        return b.readerUrl || '#';
      }

      function gated(dest){
        return IS_LOGGED_IN ? dest : '/login?next=' + encodeURIComponent(dest || '/');
      }

      function brand(src){
        const s = (src||'').toLowerCase();
        return s==='archive' ? 'Archive.org' : (s==='gutenberg' ? 'Project Gutenberg' : (s==='openlibrary' ? 'Open Library' : 'Book'));
      }

      function cardTemplate(b){
        const dest = gated(hrefFromCard(b));
        const internal = IS_LOGGED_IN && (b.archiveId || (b.source||'').toLowerCase()==='archive' || (b.source||'').toLowerCase()==='gutenberg');
        return `
          <article class="card fade-in">
            <a href="${dest}" ${internal ? '' : 'rel="noopener"'} style="text-decoration:none;color:inherit">
              <div class="thumb">${b.cover ? `<img src="${b.cover}" alt="${escapeHtml(b.title||'')}" loading="lazy" referrerpolicy="no-referrer">` : ''}</div>
              <div class="meta">
                <span class="badge">${brand(b.source)}</span>
                <h3>${escapeHtml(b.title || '')}</h3>
                <p>${escapeHtml(b.creator || '')}</p>
              </div>
            </a>
          </article>
        `;
      }

      async function loadFeatured(){
        try{
          const r = await fetch('/api/featured-books', { credentials: 'same-origin' });
          if (!r.ok) throw new Error('bad status');
          const data = await r.json();
          const items =
            Array.isArray(data) ? data :
            (Array.isArray(data.items) ? data.items :
            (Array.isArray(data.results) ? data.results : []));
          if (!items.length) {
            grid.innerHTML = '<div class="hint">No picks right now. Try a search above.</div>';
            return;
          }
          grid.innerHTML = items.map(cardTemplate).join('');
        } catch(e){
          console.error('featured error', e);
          grid.innerHTML = '<div class="hint">Could not load picks. Try refreshing.</div>';
        }
      }

      loadFeatured();
    })();
  </script>
  <% } %>
</body>
</html>
