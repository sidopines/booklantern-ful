<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('./partials/head.ejs', {
    pageTitle: 'Read Books Online',
    pageDescription: "Browse and read books fetched from multiple free sources using BookLantern's modern reader experience."
  }) %>
  <link rel="stylesheet" href="/css/site.css">
  <style>
    /* small page-local tweaks */
    .page-wrap{max-width:1100px;margin:0 auto;padding:24px}
    .back-link{display:inline-block;margin-bottom:10px;color:#1256b3;text-decoration:none;font-size:.95rem}
    .back-link:hover{text-decoration:underline}
    h1{margin:8px 0 14px 0}
    form.read-search{display:flex;gap:10px;margin:10px 0 6px 0}
    form.read-search input[type="text"]{flex:1;padding:.7rem .8rem;border:1px solid #e5e7eb;border-radius:12px;background:#fff}
    form.read-search button{padding:.7rem 1rem;border:0;border-radius:12px;background:#111;color:#fff;font-weight:600;cursor:pointer}
    .empty{color:#667085;margin:24px 0}
    .grid, .book-grid{display:grid;grid-template-columns:repeat(auto-fill, minmax(210px, 1fr));gap:18px}
    .book-card{background:#fff;border:1px solid #eaeef3;border-radius:16px;overflow:hidden;box-shadow:0 10px 30px rgba(2,6,23,.08)}
    .book-card .thumb{position:relative;aspect-ratio:3/4;background:#eef2f7;display:flex;align-items:center;justify-content:center}
    .book-card .thumb img{position:absolute;inset:0;width:100%;height:100%;object-fit:cover}
    .no-cover{color:#667085;font-size:.9rem}
    .book-card h3{margin:.6rem .8rem .2rem .8rem;font-size:1rem}
    .book-card p{margin:0 .8rem .4rem .8rem;color:#667085;font-size:.9rem}
    .meta-row{display:flex;align-items:center;gap:.5rem;margin:.3rem .8rem .8rem .8rem}
    .badge{display:inline-block;font-size:.75rem;background:#eef4ff;color:#1256b3;border:1px solid #d6e4ff;padding:.2rem .5rem;border-radius:999px}
    .action{margin:.6rem .8rem 1rem .8rem;color:#1256b3;font-weight:600}
  </style>
</head>
<body>
  <%- include('./partials/navbar.ejs') %>

  <div class="page-wrap">
    <a href="javascript:history.back()" class="back-link">‚Üê Back</a>
    <h1>üìö Explore Free Books</h1>

    <form class="read-search" action="/read" method="GET">
      <input
        type="text"
        name="query"
        placeholder="Search books by title or author"
        value="<%= typeof query !== 'undefined' ? query : '' %>">
      <button type="submit">Search</button>
    </form>

    <% const hasQuery = (typeof query !== 'undefined' && String(query).trim() !== ''); %>

    <!-- STAFF PICKS: only when there's no search -->
    <% if (!hasQuery) { %>
    <section class="section">
      <div class="container">
        <div class="shelf-header">
          <h2>Staff picks</h2>
          <div class="hint">Curated picks from across open libraries</div>
        </div>
        <div id="featured-grid" class="grid" aria-live="polite"></div>
      </div>
    </section>
    <% } %>

    <!-- SEARCH RESULTS: render ONLY when there IS a query -->
    <% if (hasQuery) { %>
      <% if (!books || books.length === 0) { %>
        <div class="empty">No books found. Try another search term.</div>
      <% } else { %>
        <div class="book-grid">
          <% books.forEach(function(book){
               const src  = (book.source || '').toLowerCase();
               const id   = book.identifier || book._id || '';

               const isArchive   = (src === 'archive');
               const isGutenberg = (src === 'gutenberg');
               const gutenId     = isGutenberg ? String(id).replace(/^gutenberg:/,'') : '';

               let dest = isArchive
                 ? `/read/book/${encodeURIComponent(id)}`
                 : (isGutenberg
                     ? `/read/gutenberg/${encodeURIComponent(gutenId)}/reader${book.readerUrl ? ('?u=' + encodeURIComponent(book.readerUrl)) : ''}`
                     : (book.readerUrl || '#'));

               // Gate visitors to login/register before reading
               if (!user) {
                 dest = '/login?next=' + encodeURIComponent(dest);
               }
          %>
            <div class="book-card" data-source="<%= src %>">
              <a href="<%= dest %>" <%= (isArchive || isGutenberg) ? '' : 'target="_blank" rel="noopener"' %> style="text-decoration:none;color:inherit">
                <div class="thumb">
                  <% if (book.cover) { %>
                    <img src="<%= book.cover %>" alt="<%= book.title %>" loading="lazy" referrerpolicy="no-referrer">
                  <% } else { %>
                    <div class="no-cover">No Cover</div>
                  <% } %>
                </div>
                <h3><%= book.title %></h3>
                <p><%= book.creator || book.author || '' %></p>
                <div class="meta-row">
                  <% if (src) { %>
                    <span class="badge">
                      <%= src === 'archive' ? 'Archive.org' : (src === 'gutenberg' ? 'Project Gutenberg' : (src === 'openlibrary' ? 'Open Library' : src)) %>
                    </span>
                  <% } %>
                </div>
                <div class="action">üìñ Read Now</div>
              </a>
            </div>
          <% }) %>
        </div>
      <% } %>
    <% } %>
  </div>

  <footer class="footer">
    &copy; <%= new Date().getFullYear() %> BookLantern ‚Ä¢ Built on open libraries ‚Ä¢ <a href="/about">About</a>
  </footer>

  <% if (!hasQuery) { %>
  <!-- FETCH Staff picks -->
  <script>
    (function(){
      const IS_LOGGED_IN = <%= !!user %>;
      const grid = document.getElementById('featured-grid');

      function escapeHtml(s){
        return String(s || '')
          .replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;')
          .replace(/"/g,'&quot;').replace(/'/g,'&#39;');
      }

      function hrefFromCard(b){
        if (b && b.href) return b.href;
        const src = (b.source || '').toLowerCase();
        const id  = b.identifier || '';
        const ia  = b.archiveId || (src === 'archive' ? id : '');
        if (ia) return '/read/book/' + encodeURIComponent(ia);
        if (src === 'gutenberg') {
          const gid = String(id).replace(/^gutenberg:/,'');
          const qs  = b.readerUrl ? ('?u=' + encodeURIComponent(b.readerUrl)) : '';
          return '/read/gutenberg/' + encodeURIComponent(gid) + '/reader' + qs;
        }
        return b.readerUrl || '#';
      }

      function gated(dest){
        return IS_LOGGED_IN ? dest : '/login?next=' + encodeURIComponent(dest || '/');
      }

      function brand(src){
        const s = (src||'').toLowerCase();
        return s==='archive' ? 'Archive.org' : (s==='gutenberg' ? 'Project Gutenberg' : (s==='openlibrary' ? 'Open Library' : 'Book'));
      }

      // pretty fallback tile (when no cover)
      function fallbackTile(title){
        const t = escapeHtml(title || 'Explore');
        return `
          <div class="thumb" style="background:linear-gradient(180deg,#f4f7ff,#eefcf7);display:flex;align-items:center;justify-content:center;">
            <div style="text-align:center;">
              <div style="font-size:40px;line-height:1.1">üîé</div>
              <div style="margin-top:6px;color:#667085;font-size:12px">${t}</div>
            </div>
          </div>`;
      }

      function cardTemplate(b){
        const dest = gated(hrefFromCard(b));
        const internal = IS_LOGGED_IN && (b.archiveId || (b.source||'').toLowerCase()==='archive' || (b.source||'').toLowerCase()==='gutenberg');
        const thumb = b.cover
          ? `<div class="thumb"><img src="${b.cover}" alt="${escapeHtml(b.title||'')}" loading="lazy" referrerpolicy="no-referrer"></div>`
          : fallbackTile(b.title);

        return `
          <article class="card fade-in">
            <a href="${dest}" ${internal ? '' : 'rel="noopener"'} style="text-decoration:none;color:inherit">
              ${thumb}
              <div class="meta">
                <span class="badge">${brand(b.source)}</span>
                <h3>${escapeHtml(b.title || '')}</h3>
                <p>${escapeHtml(b.creator || '')}</p>
              </div>
            </a>
          </article>
        `;
      }

      async function loadFeatured(){
        try{
          const r = await fetch('/api/featured-books', { credentials: 'same-origin' });
          if (!r.ok) throw new Error('bad status');
          const data = await r.json();
          const items =
            Array.isArray(data) ? data :
            (Array.isArray(data.items) ? data.items :
            (Array.isArray(data.results) ? data.results : []));
          if (!items.length) {
            grid.innerHTML = '<div class="hint">No picks right now. Try a search above.</div>';
            return;
          }
          grid.innerHTML = items.map(cardTemplate).join('');
        } catch(e){
          console.error('featured error', e);
          grid.innerHTML = '<div class="hint">Could not load picks. Try refreshing.</div>';
        }
      }

      loadFeatured();
    })();
  </script>
  <% } %>
</body>
</html>
