<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('./partials/head.ejs', {
    pageTitle: (typeof pageTitle !== 'undefined' && pageTitle) ? pageTitle : 'Read Books Online',
    pageDescription: (typeof pageDescription !== 'undefined' && pageDescription) ? pageDescription : "Browse and read books fetched from multiple free sources using BookLantern's modern reader experience."
  }) %>
</head>
<body>
  <%- include('./partials/navbar.ejs') %>

  <%
    const q = (typeof query !== 'undefined' && query) ? String(query).trim() : '';
    const hasQuery = q.length > 0;
  %>

  <!-- HERO / SEARCH -->
  <section class="hero">
    <div class="hero-inner">
      <h1 class="headline">Find your next read</h1>
      <p class="subhead">Search across millions of titles from globally trusted libraries.</p>

      <form class="searchbar" action="/read" method="GET" role="search" aria-label="Search books">
        <input type="text" name="query" placeholder="Try ‘Plato’, ‘Socrates’, ‘Physics’, ‘Poetry’…" value="<%= q %>" />
        <button class="btn" type="submit">Search Books</button>
      </form>

      <div class="benefits">
        <span>Inline readers for many titles</span> •
        <span>Clean, book-like experience</span> •
        <span>Bookmarks with your account</span>
      </div>
    </div>
  </section>

  <!-- STAFF PICKS (only when no search query) -->
  <% if (!hasQuery) { %>
  <section class="section">
    <div class="container">
      <div class="shelf-header">
        <h2>Staff picks</h2>
        <div class="hint">Curated highlights to get you started</div>
      </div>
      <div id="featured-grid" class="grid" aria-live="polite"></div>
    </div>
  </section>
  <% } %>

  <!-- RESULTS -->
  <section class="section">
    <div class="container">
      <% if (typeof error !== 'undefined' && error) { %>
        <div class="hint" role="status" style="margin-bottom:12px;"><%= error %></div>
      <% } %>

      <% if (!hasQuery) { %>
        <div class="hint">Search above to see results, or pick from the staff selections.</div>
      <% } else if (!books || books.length === 0) { %>
        <div class="hint">No books found. Try another search term.</div>
      <% } else { %>
        <div class="grid">
          <% books.forEach(function(book){ 
               const src = (book.source || '').toLowerCase();
               const id  = book.identifier || book._id || '';
               const isArchive    = src === 'archive';
               const isGutenberg  = src === 'gutenberg';
               const isWikisource = src === 'wikisource';

               // Destination comes from server (readerUrl). For our inline readers it will be:
               //  - /read/gutenberg/:gid/reader?title=...&author=...
               //  - /read/wikisource/:lang/:title/reader
               //  - /read/book/:identifier     (Internet Archive viewer)
               let dest = book.readerUrl || '#';

               // Gate internal readers for guests
               const isInternalReader = dest.startsWith('/read/');
               if (!user && isInternalReader) {
                 dest = '/login?next=' + encodeURIComponent(book.readerUrl || '/');
               }

               // External links (rare here) should open a new tab
               const external = !dest.startsWith('/');
          %>
          <article class="card">
            <a href="<%= dest %>" <%= external ? 'target="_blank" rel="noopener"' : '' %> style="text-decoration:none;color:inherit">
              <div class="thumb">
                <% if (book.cover) { %>
                  <img src="<%= book.cover %>" alt="<%= book.title %>" loading="lazy" referrerpolicy="no-referrer">
                <% } %>
              </div>
              <div class="meta">
                <span class="badge">
                  <%= src === 'gutenberg' ? 'Project Gutenberg' :
                      (src === 'archive' ? 'Archive.org' :
                      (src === 'openlibrary' ? 'Open Library' :
                      (src === 'wikisource' ? 'Wikisource' : 'Book'))) %>
                </span>
                <h3><%= book.title %></h3>
                <p><%= book.creator || '' %></p>
              </div>
            </a>
          </article>
          <% }) %>
        </div>
      <% } %>
    </div>
  </section>

  <footer class="footer">
    &copy; <%= new Date().getFullYear() %> BookLantern • <a href="/about">About</a>
  </footer>

  <% if (!hasQuery) { %>
  <!-- Staff picks loader (no EJS inside template strings to avoid tag errors) -->
  <script>
    (function(){
      const IS_LOGGED_IN = <%= !!user %>;
      const grid = document.getElementById('featured-grid');

      function brand(src){
        const s = (src||'').toLowerCase();
        if (s === 'gutenberg') return 'Project Gutenberg';
        if (s === 'archive') return 'Archive.org';
        if (s === 'openlibrary') return 'Open Library';
        if (s === 'wikisource') return 'Wikisource';
        return 'Book';
      }

      // Build in-site destinations for curated cards (so we never leak to external sites)
      function buildDest(b){
        const src = (b.source || '').toLowerCase();
        const id  = b.identifier || '';

        if (src === 'gutenberg') {
          // accept identifiers like "gutenberg:1342" or plain id
          const gid = String(id).replace(/^gutenberg:/,'').replace(/[^0-9]/g,'');
          const title = encodeURIComponent(b.title || '');
          const author = encodeURIComponent(b.creator || '');
          return '/read/gutenberg/' + gid + '/reader?title=' + title + '&author=' + author;
        }
        if (src === 'archive') {
          // accept identifiers like "archive:xyz" or just item id
          const ia = b.archiveId || String(id).replace(/^archive:/,'');
          return '/read/book/' + encodeURIComponent(ia);
        }
        if (src === 'wikisource' && b.href) {
          // if curated ever includes wikisource cards, use provided href (should already be internal)
          return b.href;
        }
        // Fallback: if server provided an internal readerUrl keep it; else keep original
        return b.readerUrl || '#';
      }

      function gated(href){
        if (!href || href === '#') return '#';
        if (href.startsWith('/read/') && !IS_LOGGED_IN) return '/login?next=' + encodeURIComponent(href);
        return href;
      }

      function escapeHtml(s){
        return String(s || '')
          .replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;')
          .replace(/"/g,'&quot;').replace(/'/g,'&#39;');
      }

      function cardTemplate(b){
        const dest = gated(buildDest(b));
        const external = !dest.startsWith('/');
        return (
          '<article class="card fade-in">' +
            '<a href="' + dest + '" ' + (external ? 'target="_blank" rel="noopener"' : '') + ' style="text-decoration:none;color:inherit">' +
              '<div class="thumb">' + (b.cover ? '<img src="' + b.cover + '" alt="' + escapeHtml(b.title||'') + '" loading="lazy" referrerpolicy="no-referrer">' : '') + '</div>' +
              '<div class="meta">' +
                '<span class="badge">' + brand(b.source) + '</span>' +
                '<h3>' + escapeHtml(b.title || '') + '</h3>' +
                '<p>' + escapeHtml(b.creator || '') + '</p>' +
              '</div>' +
            '</a>' +
          '</article>'
        );
      }

      async function loadFeatured(){
        try{
          const r = await fetch('/api/featured-books', { credentials:'same-origin' });
          if (!r.ok) throw new Error('Bad status');
          const data = await r.json();
          const items = Array.isArray(data) ? data
                        : Array.isArray(data.items) ? data.items
                        : Array.isArray(data.results) ? data.results
                        : [];
          if (!items.length) {
            grid.innerHTML = '<div class="hint">No featured picks right now. Try a search above.</div>';
            return;
          }
          grid.innerHTML = items.map(cardTemplate).join('');
        } catch(e){
          console.error('featured error', e);
          grid.innerHTML = '<div class="hint">Could not load featured books. Try refreshing.</div>';
        }
      }

      loadFeatured();
    })();
  </script>
  <% } %>
</body>
</html>
