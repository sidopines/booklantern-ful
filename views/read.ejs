<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('./partials/head.ejs', {
    pageTitle: 'Read Books Online',
    pageDescription: "Browse and read books fetched from free sources using BookLantern's modern reader."
  }) %>
  <link rel="stylesheet" href="/css/site.css">
  <style>
    .wrap{ max-width:1100px; margin:0 auto; padding:16px 16px 40px; }
    .back-link{ display:inline-block; margin:8px 0 10px; color:#1256b3; text-decoration:none; }
    .back-link:hover{ text-decoration:underline; }
    .title{ margin:6px 0 12px; }
    .searchbar{ display:flex; gap:10px; }
    .searchbar input{ flex:1 1 auto; }
    .book-grid{ display:grid; grid-template-columns: repeat(auto-fill, minmax(210px,1fr)); gap:18px; margin-top:18px; }
    .book-card{ background:#fff; border:1px solid #e5e7eb; border-radius:14px; overflow:hidden; box-shadow:0 8px 28px rgba(0,0,0,.06); }
    .book-card .thumb{ width:100%; aspect-ratio:3/4; background:#eef2f7; position:relative; }
    .book-card .thumb img{ position:absolute; inset:0; width:100%; height:100%; object-fit:cover; }
    .book-card h3{ margin:8px 12px 2px; font-size:16px; }
    .book-card p{ margin:0 12px 10px; color:#667085; font-size:13px; }
    .meta-row{ margin:0 12px 12px; }
    .badge{ display:inline-block; padding:4px 8px; border:1px solid #e5e7eb; border-radius:999px; font-size:11px; background:#fff; color:#1f2937; }
    .action{ margin:0 12px 14px; }
    .action span{ display:inline-flex; align-items:center; gap:6px; background:#5b74ff; color:#fff; padding:8px 12px; border-radius:10px; font-weight:600; }
    .empty{ margin:18px 0; color:#667085; }
    @media (max-width: 720px){ .searchbar{ flex-direction:column; } }
  </style>
</head>
<body>
  <%- include('./partials/navbar.ejs') %>

  <main class="wrap">
    <a href="javascript:history.back()" class="back-link">‚Üê Back</a>
    <h1 class="title">üìö Explore Free Books</h1>

    <form class="searchbar" action="/read" method="GET">
      <input
        type="text"
        name="query"
        placeholder="Search books by title or author"
        value="<%= typeof query !== 'undefined' ? query : '' %>">
      <button class="btn" type="submit">Search</button>
    </form>

    <% const hasQuery = (typeof query !== 'undefined' && String(query).trim() !== ''); %>

    <% if (!hasQuery) { %>
    <!-- Staff picks when there's no search -->
    <section class="section">
      <div class="container">
        <div class="shelf-header">
          <h2>Staff picks</h2>
          <div class="hint">Curated picks from across open libraries</div>
        </div>
        <div id="featured-grid" class="grid" aria-live="polite"></div>
      </div>
    </section>
    <% } %>

    <% if (!books || books.length === 0) { %>
      <div class="empty">No books found. Try another search term.</div>
    <% } else { %>
      <div class="book-grid">
        <% books.forEach(function(book){
             const src  = (book.source || '').toLowerCase();
             const id   = book.identifier || book._id || '';

             const isArchive   = (src === 'archive');
             const isGutenberg = (src === 'gutenberg');
             const gutenId     = isGutenberg ? String(id).replace(/^gutenberg:/,'') : '';

             // Build internal destinations
             let dest;
             if (isArchive) {
               // archive: always open inside BookLantern viewer
               const ia = String(id).replace(/^archive:/,'').replace(/^ia:/,'');
               dest = '/read/book/' + encodeURIComponent(ia);
             } else if (isGutenberg) {
               dest = '/read/gutenberg/' + encodeURIComponent(gutenId) + '/reader';
             } else {
               // openlibrary or unknown: prefer a specific readerUrl, else route back to /read with a query for more copies
               if (book.readerUrl) {
                 dest = book.readerUrl;
               } else {
                 const q = encodeURIComponent(book.title || '');
                 dest = '/read?query=' + q;
               }
             }

             // Gate visitors to login/register
             const finalHref = (<%= !!user %>) ? dest : ('/login?next=' + encodeURIComponent(dest));
        %>
          <div class="book-card" data-source="<%= src %>">
            <a href="<%= finalHref %>" <%= (isArchive || isGutenberg) ? '' : 'rel="noopener"' %> style="text-decoration:none;color:inherit">
              <div class="thumb">
                <% if (book.cover) { %>
                  <img src="<%= book.cover %>" alt="<%= book.title %>" loading="lazy" referrerpolicy="no-referrer">
                <% } %>
              </div>
              <h3><%= book.title %></h3>
              <p><%= book.creator || book.author || '' %></p>
              <div class="meta-row">
                <% if (src) { %>
                  <span class="badge"><%= src === 'archive' ? 'Archive.org' : (src === 'gutenberg' ? 'Project Gutenberg' : (src === 'openlibrary' ? 'Open Library' : 'Book')) %></span>
                <% } %>
              </div>
              <div class="action"><span>üìñ Read Now</span></div>
            </a>
          </div>
        <% }) %>
      </div>
    <% } %>
  </main>

  <footer class="footer">
    &copy; <%= new Date().getFullYear() %> BookLantern ‚Ä¢ Built on open libraries ‚Ä¢ <a href="/about">About</a>
  </footer>

  <% if (!hasQuery) { %>
  <script>
    (function(){
      const grid = document.getElementById('featured-grid');
      function escapeHtml(s){ return String(s||'').replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&#39;'); }
      function hrefFromCard(b){
        const src = (b.source || '').toLowerCase();
        const id  = b.identifier || '';
        const ia  = b.archiveId || (src==='archive' ? id : '');
        if (ia) return '/read/book/' + encodeURIComponent(String(ia).replace(/^archive:/,'').replace(/^ia:/,''));
        if (src==='gutenberg') {
          const gid = String(id).replace(/^gutenberg:/,'');
          return '/read/gutenberg/' + encodeURIComponent(gid) + '/reader';
        }
        // openlibrary or unknown
        if (b.readerUrl) return b.readerUrl;
        return '/read?query=' + encodeURIComponent(b.title || '');
      }
      function cardTemplate(b){
        const dest = hrefFromCard(b);
        return `
          <article class="card fade-in">
            <a href="${dest}" style="text-decoration:none;color:inherit">
              <div class="thumb">${b.cover ? `<img src="${b.cover}" alt="${escapeHtml(b.title||'')}" loading="lazy" referrerpolicy="no-referrer">` : ''}</div>
              <div class="meta">
                <span class="badge">${ (b.source||'Book') }</span>
                <h3>${escapeHtml(b.title||'')}</h3>
                <p>${escapeHtml(b.creator||'')}</p>
              </div>
            </a>
          </article>
        `;
      }
      async function loadFeatured(){
        try{
          const r = await fetch('/api/featured-books', { credentials:'same-origin' });
          const data = await r.json();
          const items = Array.isArray(data) ? data : (Array.isArray(data.items)?data.items:(Array.isArray(data.results)?data.results:[]));
          grid.innerHTML = items.map(cardTemplate).join('');
        }catch(e){
          grid.innerHTML = '<div class="hint">Could not load picks.</div>';
        }
      }
      loadFeatured();
    })();
  </script>
  <% } %>
</body>
</html>
